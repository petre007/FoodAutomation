






Started logging.

<<<
Content-Length: 3366

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":12124,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"g:\\11.ZhiYi\\5.Tutorial\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 14711

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":1,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n        Motor(Stop, 0);\r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        MOTORservo.write(10);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\r\n        Serial.print(\"rightDistance:  \");\r\n        Serial.println(rightDistance);\r\n        MOTORservo.write(90);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        MOTORservo.write(170);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\r\n        Serial.print(\"leftDistance:  \");\r\n        Serial.println(leftDistance);\r\n        MOTORservo.write(90);\r\n        if((rightDistance < 20) && (leftDistance < 20)){\r\n\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 1000;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Contrarotate, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            Motor(Stop, 0);\r\n            for(int i = 0;i < 100;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Contrarotate, 250);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }//turn right\r\n        else if(rightDistance > leftDistance){\r\n            Motor(Stop, 0);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Clockwise, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n        else{\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Clockwise, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle+=1;\r\n    if(angle >= 180) angle = 180;\r\n    delay(10);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 395

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":384,"character":117},"end":{"line":384,"character":117}},"context":{"diagnostics":[]}}}Content-Length: 288

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 8835

{"jsonrpc":"2.0","id":2,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":337,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":338,"character":0},"end":{"line":344,"character":1}},"selectionRange":{"start":{"line":338,"character":5},"end":{"line":338,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":345,"character":0},"end":{"line":351,"character":1}},"selectionRange":{"start":{"line":345,"character":5},"end":{"line":345,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":353,"character":0},"end":{"line":362,"character":1}},"selectionRange":{"start":{"line":353,"character":5},"end":{"line":353,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":364,"character":0},"end":{"line":375,"character":1}},"selectionRange":{"start":{"line":364,"character":6},"end":{"line":364,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":377,"character":0},"end":{"line":460,"character":1}},"selectionRange":{"start":{"line":377,"character":5},"end":{"line":377,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":313,"character":88}}}
>>>
Content-Length: 252

{"jsonrpc":"2.0","id":3,"result":{"contents":{"kind":"markdown","value":"### variable `Right_Tra_Value`  \n\n---\nType: `int`  \n\n---\n```cpp\nint Right_Tra_Value\n```"},"range":{"start":{"line":313,"character":73},"end":{"line":313,"character":88}}}}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":317,"character":88}}}
>>>
Content-Length: 252

{"jsonrpc":"2.0","id":4,"result":{"contents":{"kind":"markdown","value":"### variable `Right_Tra_Value`  \n\n---\nType: `int`  \n\n---\n```cpp\nint Right_Tra_Value\n```"},"range":{"start":{"line":317,"character":79},"end":{"line":317,"character":94}}}}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":11,"character":68}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":27,"character":54}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 391

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":62,"character":30},"end":{"line":62,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
Content-Length: 391

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":81,"character":11},"end":{"line":81,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":11,"character":42}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":9,"result":null}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":11,"character":45}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":10,"result":null}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":9,"character":41}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":17,"character":18}}}
>>>
Content-Length: 242

{"jsonrpc":"2.0","id":12,"result":{"contents":{"kind":"markdown","value":"### macro `CENTER_LINE_TRACJING`  \n\n---\n```cpp\n#define CENTER_LINE_TRACJING A1\n```"},"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":28}}}}
<<<
Content-Length: 59

{"jsonrpc":"2.0","id":13,"method":"shutdown","params":null}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":13,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3366

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":12124,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"g:\\11.ZhiYi\\5.Tutorial\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 14711

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":1,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n        Motor(Stop, 0);\r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        MOTORservo.write(10);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\r\n        Serial.print(\"rightDistance:  \");\r\n        Serial.println(rightDistance);\r\n        MOTORservo.write(90);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        MOTORservo.write(170);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\r\n        Serial.print(\"leftDistance:  \");\r\n        Serial.println(leftDistance);\r\n        MOTORservo.write(90);\r\n        if((rightDistance < 20) && (leftDistance < 20)){\r\n\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 1000;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Contrarotate, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            Motor(Stop, 0);\r\n            for(int i = 0;i < 100;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Contrarotate, 250);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }//turn right\r\n        else if(rightDistance > leftDistance){\r\n            Motor(Stop, 0);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Clockwise, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n        else{\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Clockwise, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle+=1;\r\n    if(angle >= 180) angle = 180;\r\n    delay(10);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 391

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":81,"character":11},"end":{"line":81,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/39","percentage":2}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/39","percentage":5}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/39","percentage":5}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/39","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/39","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/39","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/39","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/39","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/39","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/39","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/39","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/39","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/39","percentage":17}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/39","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/39","percentage":20}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/39","percentage":23}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/39","percentage":23}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/39","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/39","percentage":25}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/39","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/39","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/39","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/39","percentage":30}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/39","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/39","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/39","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/39","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/39","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/39","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/39","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/39","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/39","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/39","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/39","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/39","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/39","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/39","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/39","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/39","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/39","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/39","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/39","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/39","percentage":61}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/39","percentage":61}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/39","percentage":64}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/39","percentage":64}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/39","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/39","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/39","percentage":69}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/39","percentage":69}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/39","percentage":71}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/39","percentage":71}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/39","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/39","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/39","percentage":76}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/39","percentage":76}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/39","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/39","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/39","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/39","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/39","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/39","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/39","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/39","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/39","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/39","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/39","percentage":97}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":27,"character":65}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":23,"character":54}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":22,"character":55}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///g%3A/11.ZhiYi/5.Tutorial/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":28,"character":48}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-BB4029E8F501CBB72C17BB0F6BFDA838"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":6,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3356

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":11276,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 14712

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":1,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n        Motor(Stop, 0);\r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        MOTORservo.write(10);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\r\n        Serial.print(\"rightDistance:  \");\r\n        Serial.println(rightDistance);\r\n        MOTORservo.write(90);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        MOTORservo.write(170);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\r\n        Serial.print(\"leftDistance:  \");\r\n        Serial.println(leftDistance);\r\n        MOTORservo.write(90);\r\n        if((rightDistance < 20) && (leftDistance < 20)){\r\n\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 1000;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Contrarotate, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            Motor(Stop, 0);\r\n            for(int i = 0;i < 100;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Contrarotate, 250);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }//turn right\r\n        else if(rightDistance > leftDistance){\r\n            Motor(Stop, 0);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Clockwise, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n        else{\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Clockwise, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle+=1;\r\n    if(angle >= 180) angle = 180;\r\n    delay(10);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 388

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 289

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 8835

{"jsonrpc":"2.0","id":2,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":337,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":338,"character":0},"end":{"line":344,"character":1}},"selectionRange":{"start":{"line":338,"character":5},"end":{"line":338,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":345,"character":0},"end":{"line":351,"character":1}},"selectionRange":{"start":{"line":345,"character":5},"end":{"line":345,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":353,"character":0},"end":{"line":362,"character":1}},"selectionRange":{"start":{"line":353,"character":5},"end":{"line":353,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":364,"character":0},"end":{"line":375,"character":1}},"selectionRange":{"start":{"line":364,"character":6},"end":{"line":364,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":377,"character":0},"end":{"line":460,"character":1}},"selectionRange":{"start":{"line":377,"character":5},"end":{"line":377,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-32800074B97154A8C499C20ACD7EA9F1"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":7,"character":21}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":3,"result":[]}
<<<
Content-Length: 390

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":7,"character":21},"end":{"line":7,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":8,"character":25}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":7,"character":21}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":6,"result":[]}
<<<
Content-Length: 390

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":7,"character":21},"end":{"line":7,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":9,"character":71}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 390

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":9,"character":71},"end":{"line":9,"character":71}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":9,"character":71}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":10,"result":null}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":8,"character":66}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-32800074B97154A8C499C20ACD7EA9F1"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":4,"character":17}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":12,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-32800074B97154A8C499C20ACD7EA9F1"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 319

{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":10,"character":68}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":13,"result":null}
<<<
Content-Length: 319

{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":11,"character":66}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":14,"result":null}
<<<
Content-Length: 319

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":11,"character":64}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":15,"result":null}
<<<
Content-Length: 59

{"jsonrpc":"2.0","id":16,"method":"shutdown","params":null}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":16,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3356

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":25076,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.1"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 14712

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":1,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n        Motor(Stop, 0);\r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        MOTORservo.write(10);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        rightDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\r\n        Serial.print(\"rightDistance:  \");\r\n        Serial.println(rightDistance);\r\n        MOTORservo.write(90);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        MOTORservo.write(170);\r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        leftDistance = SR04(Trig_PIN, Echo_PIN);//SR04();\r\n        Serial.print(\"leftDistance:  \");\r\n        Serial.println(leftDistance);\r\n        MOTORservo.write(90);\r\n        if((rightDistance < 20) && (leftDistance < 20)){\r\n\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 1000;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Contrarotate, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n        else if(rightDistance < leftDistance) {\r\n            Motor(Stop, 0);\r\n            for(int i = 0;i < 100;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Contrarotate, 250);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }//turn right\r\n        else if(rightDistance > leftDistance){\r\n            Motor(Stop, 0);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Clockwise, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n        else{\r\n            Motor(Backward, 180);\r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n            Motor(Clockwise, 250); \r\n            for(int i = 0;i < 500;i++){\r\n              delay(1);\r\n              RXpack_func();\r\n              if(model_var != 1)\r\n                return ;\r\n            }\r\n        }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle+=1;\r\n    if(angle >= 180) angle = 180;\r\n    delay(10);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 390

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":9,"character":71},"end":{"line":9,"character":71}},"context":{"diagnostics":[]}}}Content-Length: 289

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 8835

{"jsonrpc":"2.0","id":2,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":337,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":338,"character":0},"end":{"line":344,"character":1}},"selectionRange":{"start":{"line":338,"character":5},"end":{"line":338,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":345,"character":0},"end":{"line":351,"character":1}},"selectionRange":{"start":{"line":345,"character":5},"end":{"line":345,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":353,"character":0},"end":{"line":362,"character":1}},"selectionRange":{"start":{"line":353,"character":5},"end":{"line":353,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":364,"character":0},"end":{"line":375,"character":1}},"selectionRange":{"start":{"line":364,"character":6},"end":{"line":364,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":377,"character":0},"end":{"line":460,"character":1}},"selectionRange":{"start":{"line":377,"character":5},"end":{"line":377,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":11,"character":71}}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-32800074B97154A8C499C20ACD7EA9F1"}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":10,"character":41}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-32800074B97154A8C499C20ACD7EA9F1"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":14,"character":30}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 392

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":14,"character":30},"end":{"line":14,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":6,"result":[]}
<<<
Content-Length: 317

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":8,"character":48}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":8,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":8,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3381

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":3748,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN - 360\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.2"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 12383

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":27,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle+=1;\r\n    if(angle >= 180) angle = 180;\r\n    delay(10);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 402

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":158,"character":5},"end":{"line":158,"character":5}},"context":{"diagnostics":[]}}}Content-Length: 299

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 299

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 402

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":70,"character":29},"end":{"line":70,"character":29}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 8835

{"jsonrpc":"2.0","id":2,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8835

{"jsonrpc":"2.0","id":3,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 402

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":67,"character":30},"end":{"line":67,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 328

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":64,"character":30}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":7,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3381

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7560,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN - 360\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.2"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 12382

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":1,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle+=1;\r\n    if(angle >= 180) angle = 180;\r\n    delay(10);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 402

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":67,"character":30},"end":{"line":67,"character":30}},"context":{"diagnostics":[]}}}Content-Length: 299

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 8835

{"jsonrpc":"2.0","id":2,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 341

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":137,"character":14}}}
>>>
Content-Length: 215

{"jsonrpc":"2.0","id":3,"result":[{"range":{"start":{"line":137,"character":8},"end":{"line":137,"character":17}},"kind":1},{"range":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}},"kind":1}]}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":137,"character":8},"end":{"line":137,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":137,"character":8},"end":{"line":137,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":23}}}
>>>
Content-Length: 308

{"jsonrpc":"2.0","id":6,"result":{"contents":{"kind":"markdown","value":"### variable `angle`  \n\n---\nType: `uint16_t`  \nValue = `90 (0x5a)`  \nPassed as value (converted to int)  \n\n---\n```cpp\nuint16_t angle = 90\n```"},"range":{"start":{"line":270,"character":21},"end":{"line":270,"character":26}}}}
<<<
Content-Length: 341

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":24}}}
>>>
Content-Length: 934

{"jsonrpc":"2.0","id":7,"result":[{"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}},"kind":1},{"range":{"start":{"line":76,"character":21},"end":{"line":76,"character":26}},"kind":2},{"range":{"start":{"line":270,"character":21},"end":{"line":270,"character":26}},"kind":2},{"range":{"start":{"line":271,"character":4},"end":{"line":271,"character":9}},"kind":1},{"range":{"start":{"line":272,"character":7},"end":{"line":272,"character":12}},"kind":2},{"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":26}},"kind":3},{"range":{"start":{"line":277,"character":21},"end":{"line":277,"character":26}},"kind":2},{"range":{"start":{"line":278,"character":4},"end":{"line":278,"character":9}},"kind":1},{"range":{"start":{"line":279,"character":7},"end":{"line":279,"character":12}},"kind":2},{"range":{"start":{"line":279,"character":19},"end":{"line":279,"character":24}},"kind":3}]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":21},"end":{"line":270,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":13},"end":{"line":271,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":33},"end":{"line":272,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":10,"result":[]}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":23}}}
>>>
Content-Length: 935

{"jsonrpc":"2.0","id":11,"result":[{"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}},"kind":1},{"range":{"start":{"line":76,"character":21},"end":{"line":76,"character":26}},"kind":2},{"range":{"start":{"line":270,"character":21},"end":{"line":270,"character":26}},"kind":2},{"range":{"start":{"line":271,"character":4},"end":{"line":271,"character":9}},"kind":1},{"range":{"start":{"line":272,"character":7},"end":{"line":272,"character":12}},"kind":2},{"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":26}},"kind":3},{"range":{"start":{"line":277,"character":21},"end":{"line":277,"character":26}},"kind":2},{"range":{"start":{"line":278,"character":4},"end":{"line":278,"character":9}},"kind":1},{"range":{"start":{"line":279,"character":7},"end":{"line":279,"character":12}},"kind":2},{"range":{"start":{"line":279,"character":19},"end":{"line":279,"character":24}},"kind":3}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":21},"end":{"line":270,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":12,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":2},"contentChanges":[{"range":{"start":{"line":270,"character":21},"end":{"line":270,"character":26}},"rangeLength":5,"text":"4"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}Content-Length: 300

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 300

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":3},"contentChanges":[{"range":{"start":{"line":270,"character":22},"end":{"line":270,"character":22}},"rangeLength":0,"text":"5"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 300

{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":13,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":14,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":15,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":16,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":23},"end":{"line":270,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":17,"result":[]}
<<<
Content-Length: 12360

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":3},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    angle+=1;\r\n    if(angle >= 180) angle = 180;\r\n    delay(10);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 330

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":26}}}
>>>
Content-Length: 302

{"jsonrpc":"2.0","id":18,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":277,"character":21},"end":{"line":277,"character":26}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":26}}}
>>>
Content-Length: 302

{"jsonrpc":"2.0","id":19,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":277,"character":21},"end":{"line":277,"character":26}}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":14}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":20,"result":null}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":0},"end":{"line":272,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":21,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 426

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":4},"contentChanges":[{"range":{"start":{"line":271,"character":0},"end":{"line":272,"character":33}},"rangeLength":48,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 300

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":22,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8836

{"jsonrpc":"2.0","id":23,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":280,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":282,"character":0},"end":{"line":291,"character":1}},"selectionRange":{"start":{"line":282,"character":5},"end":{"line":282,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":293,"character":0},"end":{"line":304,"character":1}},"selectionRange":{"start":{"line":293,"character":6},"end":{"line":293,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":306,"character":0},"end":{"line":389,"character":1}},"selectionRange":{"start":{"line":306,"character":5},"end":{"line":306,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 425

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":5},"contentChanges":[{"range":{"start":{"line":270,"character":25},"end":{"line":271,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 300

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":24,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":280,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":282,"character":0},"end":{"line":291,"character":1}},"selectionRange":{"start":{"line":282,"character":5},"end":{"line":282,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":293,"character":0},"end":{"line":304,"character":1}},"selectionRange":{"start":{"line":293,"character":6},"end":{"line":293,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":306,"character":0},"end":{"line":389,"character":1}},"selectionRange":{"start":{"line":306,"character":5},"end":{"line":306,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":25,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":25},"end":{"line":270,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":26,"result":[]}
<<<
Content-Length: 12306

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":5},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 330

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":13}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":27,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":271,"character":13},"end":{"line":271,"character":14}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":12}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":28,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":271,"character":12},"end":{"line":271,"character":13}}}}Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":12}}}
>>>
Content-Length: 848

{"jsonrpc":"2.0","id":29,"result":[{"range":{"start":{"line":166,"character":10},"end":{"line":166,"character":15}},"kind":1},{"range":{"start":{"line":174,"character":10},"end":{"line":174,"character":15}},"kind":1},{"range":{"start":{"line":181,"character":10},"end":{"line":181,"character":15}},"kind":1},{"range":{"start":{"line":190,"character":12},"end":{"line":190,"character":17}},"kind":1},{"range":{"start":{"line":197,"character":12},"end":{"line":197,"character":17}},"kind":1},{"range":{"start":{"line":271,"character":4},"end":{"line":271,"character":9}},"kind":1},{"range":{"start":{"line":278,"character":4},"end":{"line":278,"character":9}},"kind":1},{"range":{"start":{"line":300,"character":4},"end":{"line":300,"character":9}},"kind":1},{"range":{"start":{"line":309,"character":8},"end":{"line":309,"character":13}},"kind":1}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":10},"end":{"line":271,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":30,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":6},"contentChanges":[{"range":{"start":{"line":271,"character":10},"end":{"line":271,"character":12}},"rangeLength":2,"text":"5"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 300

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":31,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 113

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8836

{"jsonrpc":"2.0","id":32,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":11},"end":{"line":271,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":33,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":7},"contentChanges":[{"range":{"start":{"line":271,"character":11},"end":{"line":271,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 300

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":34,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":35,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":12},"end":{"line":271,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":36,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":14},"end":{"line":271,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":37,"result":[]}
<<<
Content-Length: 12306

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":7},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":24}}}
>>>
Content-Length: 309

{"jsonrpc":"2.0","id":38,"result":{"contents":{"kind":"markdown","value":"### variable `angle`  \n\n---\nType: `uint16_t`  \nValue = `90 (0x5a)`  \nPassed as value (converted to int)  \n\n---\n```cpp\nuint16_t angle = 90\n```"},"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}}}}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":24}}}
>>>
Content-Length: 574

{"jsonrpc":"2.0","id":39,"result":[{"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}},"kind":1},{"range":{"start":{"line":76,"character":21},"end":{"line":76,"character":26}},"kind":2},{"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"kind":2},{"range":{"start":{"line":276,"character":4},"end":{"line":276,"character":9}},"kind":1},{"range":{"start":{"line":277,"character":7},"end":{"line":277,"character":12}},"kind":2},{"range":{"start":{"line":277,"character":19},"end":{"line":277,"character":24}},"kind":3}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":40,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":28},"end":{"line":275,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":41,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":42,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":22}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":42,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":43,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":24}}}Content-Length: 342

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":24}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}
>>>
Content-Length: 309

{"jsonrpc":"2.0","id":43,"result":{"contents":{"kind":"markdown","value":"### variable `angle`  \n\n---\nType: `uint16_t`  \nValue = `90 (0x5a)`  \nPassed as value (converted to int)  \n\n---\n```cpp\nuint16_t angle = 90\n```"},"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}}}}Content-Length: 574

{"jsonrpc":"2.0","id":44,"result":[{"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}},"kind":1},{"range":{"start":{"line":76,"character":21},"end":{"line":76,"character":26}},"kind":2},{"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"kind":2},{"range":{"start":{"line":276,"character":4},"end":{"line":276,"character":9}},"kind":1},{"range":{"start":{"line":277,"character":7},"end":{"line":277,"character":12}},"kind":2},{"range":{"start":{"line":277,"character":19},"end":{"line":277,"character":24}},"kind":3}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":45,"result":[]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":46,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":26}}}
>>>
Content-Length: 237

{"jsonrpc":"2.0","id":46,"result":null,"error":{"code":-32603,"message":"Rel: can't make D:\\Arduino\\libraries\\Servo\\src\\Servo.h relative to C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server3722826968\\sketch"}}






Started logging.

<<<
Content-Length: 3381

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7560,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN - 360\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.2"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 12325

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":7,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 404

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"context":{"diagnostics":[]}}}Content-Length: 329

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":14}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 329

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":16}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 329

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":16}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 329

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":10}}}Content-Length: 341

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":11}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 404

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":11},"end":{"line":275,"character":11}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 403

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 329

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":12}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 300

{"jsonrpc":"2.0","id":2,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}}}}Content-Length: 301

{"jsonrpc":"2.0","id":3,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":275,"character":15},"end":{"line":275,"character":20}}}}Content-Length: 301

{"jsonrpc":"2.0","id":4,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":275,"character":15},"end":{"line":275,"character":20}}}}Content-Length: 251

{"jsonrpc":"2.0","id":5,"result":{"contents":{"kind":"markdown","value":"### variable `MOTORservo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo MOTORservo\n```"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}}}}Content-Length: 839

{"jsonrpc":"2.0","id":6,"result":[{"range":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}},"kind":1},{"range":{"start":{"line":60,"character":4},"end":{"line":60,"character":14}},"kind":1},{"range":{"start":{"line":76,"character":4},"end":{"line":76,"character":14}},"kind":1},{"range":{"start":{"line":152,"character":4},"end":{"line":152,"character":14}},"kind":1},{"range":{"start":{"line":161,"character":8},"end":{"line":161,"character":18}},"kind":1},{"range":{"start":{"line":212,"character":4},"end":{"line":212,"character":14}},"kind":1},{"range":{"start":{"line":239,"character":4},"end":{"line":239,"character":14}},"kind":1},{"range":{"start":{"line":270,"character":4},"end":{"line":270,"character":14}},"kind":1},{"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"kind":1}]}Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}Content-Length: 251

{"jsonrpc":"2.0","id":9,"result":{"contents":{"kind":"markdown","value":"### variable `MOTORservo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo MOTORservo\n```"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}}}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}Content-Length: 330

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":13}}}Content-Length: 335

{"jsonrpc":"2.0","id":11,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":14}}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 252

{"jsonrpc":"2.0","id":10,"result":{"contents":{"kind":"markdown","value":"### variable `MOTORservo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo MOTORservo\n```"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}}}}Content-Length: 236

{"jsonrpc":"2.0","id":11,"result":null,"error":{"code":-32603,"message":"Rel: can't make D:\\Arduino\\libraries\\Servo\\src\\Servo.h relative to C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server202117014\\sketch"}}






Started logging.

<<<
Content-Length: 3381

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":7560,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN - 360\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.2"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 12325

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":7,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(angle);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 403

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 333

{"jsonrpc":"2.0","id":2,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":20,"character":14}}}Content-Length: 403

{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 403

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 322

{"jsonrpc":"2.0","id":2,"result":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","range":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}}]}Content-Length: 36

{"jsonrpc":"2.0","id":3,"result":[]}Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 328

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":76,"character":25}}}
>>>
Content-Length: 306

{"jsonrpc":"2.0","id":6,"result":{"contents":{"kind":"markdown","value":"### variable `angle`  \n\n---\nType: `uint16_t`  \nValue = `90 (0x5a)`  \nPassed as value (converted to int)  \n\n---\n```cpp\nuint16_t angle = 90\n```"},"range":{"start":{"line":76,"character":21},"end":{"line":76,"character":26}}}}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 334

{"jsonrpc":"2.0","id":9,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":153,"character":33}}}
>>>
Content-Length: 322

{"jsonrpc":"2.0","id":9,"result":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","range":{"start":{"line":14,"character":8},"end":{"line":14,"character":16}}}]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":10,"result":[]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":11,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":11,"result":[]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":12,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":13,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":25},"end":{"line":270,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":13,"result":[]}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":23}}}
>>>
Content-Length: 574

{"jsonrpc":"2.0","id":14,"result":[{"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}},"kind":1},{"range":{"start":{"line":76,"character":21},"end":{"line":76,"character":26}},"kind":2},{"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"kind":2},{"range":{"start":{"line":276,"character":4},"end":{"line":276,"character":9}},"kind":1},{"range":{"start":{"line":277,"character":7},"end":{"line":277,"character":12}},"kind":2},{"range":{"start":{"line":277,"character":19},"end":{"line":277,"character":24}},"kind":3}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":15,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":22}}}
>>>
Content-Length: 271

{"jsonrpc":"2.0","id":16,"result":{"contents":{"kind":"markdown","value":"### variable `angle`  \n\n---\nType: `uint16_t`  \nValue = `90 (0x5a)`  \n\n---\n```cpp\nuint16_t angle = 90\n```"},"range":{"start":{"line":277,"character":19},"end":{"line":277,"character":24}}}}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":17,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":22}}}
>>>
Content-Length: 323

{"jsonrpc":"2.0","id":17,"result":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","range":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":19},"end":{"line":277,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":18,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":19},"end":{"line":277,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":19},"end":{"line":277,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":20,"result":[]}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":137,"character":12}}}
>>>
Content-Length: 216

{"jsonrpc":"2.0","id":21,"result":[{"range":{"start":{"line":137,"character":8},"end":{"line":137,"character":17}},"kind":1},{"range":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}},"kind":1}]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":137,"character":8},"end":{"line":137,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":22,"result":[]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":137,"character":8},"end":{"line":137,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":23,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":25},"end":{"line":270,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":24,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":28}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":25,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":275,"character":24}}}
>>>
Content-Length: 574

{"jsonrpc":"2.0","id":26,"result":[{"range":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}},"kind":1},{"range":{"start":{"line":76,"character":21},"end":{"line":76,"character":26}},"kind":2},{"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"kind":2},{"range":{"start":{"line":276,"character":4},"end":{"line":276,"character":9}},"kind":1},{"range":{"start":{"line":277,"character":7},"end":{"line":277,"character":12}},"kind":2},{"range":{"start":{"line":277,"character":19},"end":{"line":277,"character":24}},"kind":3}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":27,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":8},"contentChanges":[{"range":{"start":{"line":275,"character":21},"end":{"line":275,"character":26}},"rangeLength":5,"text":"1"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}Content-Length: 300

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":28,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":29,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":22},"end":{"line":275,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":30,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"contentChanges":[{"range":{"start":{"line":275,"character":22},"end":{"line":275,"character":22}},"rangeLength":0,"text":"3"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 300

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":31,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":32,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":23},"end":{"line":275,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":33,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":10},"contentChanges":[{"range":{"start":{"line":275,"character":23},"end":{"line":275,"character":23}},"rangeLength":0,"text":"5"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 300

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":34,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":35,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":24},"end":{"line":275,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":36,"result":[]}
<<<
Content-Length: 12305

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":10},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    angle-=1;\r\n    if(angle <= 1) angle = 1;\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 405

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":26},"end":{"line":275,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":37,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":28}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":38,"result":null}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":0},"end":{"line":277,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":39,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":11},"contentChanges":[{"range":{"start":{"line":276,"character":0},"end":{"line":277,"character":29}},"rangeLength":44,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 300

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":40,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8836

{"jsonrpc":"2.0","id":41,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 426

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":12},"contentChanges":[{"range":{"start":{"line":275,"character":26},"end":{"line":276,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 300

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":42,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":43,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":275,"character":26},"end":{"line":275,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":44,"result":[]}
<<<
Content-Length: 12255

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":12},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 330

{"jsonrpc":"2.0","id":45,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":276,"character":10}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":45,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":276,"character":11}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":46,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":10},"end":{"line":276,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":47,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":13},"contentChanges":[{"range":{"start":{"line":276,"character":10},"end":{"line":276,"character":12}},"rangeLength":2,"text":"5"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 300

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":48,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":49,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":11},"end":{"line":276,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":50,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":14},"contentChanges":[{"range":{"start":{"line":276,"character":11},"end":{"line":276,"character":11}},"rangeLength":0,"text":"9"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}Content-Length: 300

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":51,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":52,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":53,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":12},"end":{"line":276,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":53,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":15},"contentChanges":[{"range":{"start":{"line":276,"character":11},"end":{"line":276,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":54}}Content-Length: 300

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":54,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":55,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":11},"end":{"line":276,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":56,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":16},"contentChanges":[{"range":{"start":{"line":276,"character":11},"end":{"line":276,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":57}}Content-Length: 300

{"jsonrpc":"2.0","id":58,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":57,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":58,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":59,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":12},"end":{"line":276,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":59,"result":[]}
<<<
Content-Length: 12255

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":16},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 405

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":14},"end":{"line":276,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":60,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":61,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":279,"character":31}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":61,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":62,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":279,"character":28}}}
>>>
Content-Length: 243

{"jsonrpc":"2.0","id":62,"result":{"contents":{"kind":"markdown","value":"### param `Speed`  \n\n---\nType: `int`  \n\n---\n```cpp\n// In Motor\nint Speed\n```"},"range":{"start":{"line":279,"character":24},"end":{"line":279,"character":29}}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":63,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":279,"character":29}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":63,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":64,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":279,"character":29}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":64,"result":null}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":17},"contentChanges":[{"range":{"start":{"line":276,"character":14},"end":{"line":276,"character":14}},"rangeLength":0,"text":"\r\n    "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":65}}Content-Length: 300

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":65,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 9497

{"jsonrpc":"2.0","id":66,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":290,"character":30}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":303,"character":18}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}
<<<
Content-Length: 12263

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":17},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    \r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"12","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"12","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 59

{"jsonrpc":"2.0","id":67,"method":"shutdown","params":null}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":67,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3382

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":12860,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN - 360\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.2"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 12281

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":1,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    \r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 299

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8835

{"jsonrpc":"2.0","id":1,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":14},"end":{"line":276,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":2,"result":[]}
<<<
Content-Length: 299

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":2},"contentChanges":[{"range":{"start":{"line":277,"character":2},"end":{"line":277,"character":4}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 299

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8835

{"jsonrpc":"2.0","id":3,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}Content-Length: 8835

{"jsonrpc":"2.0","id":4,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}
<<<
Content-Length: 299

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":3},"contentChanges":[{"range":{"start":{"line":277,"character":0},"end":{"line":277,"character":2}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 299

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8835

{"jsonrpc":"2.0","id":5,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}Content-Length: 8835

{"jsonrpc":"2.0","id":6,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}
<<<
Content-Length: 299

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 425

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":4},"contentChanges":[{"range":{"start":{"line":276,"character":14},"end":{"line":277,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 299

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8835

{"jsonrpc":"2.0","id":7,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}Content-Length: 8835

{"jsonrpc":"2.0","id":8,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":14},"end":{"line":276,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}
<<<
Content-Length: 12254

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":4},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":276,"character":12}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":10,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":276,"character":12},"end":{"line":276,"character":13}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":276,"character":14}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":5},"contentChanges":[{"range":{"start":{"line":276,"character":4},"end":{"line":276,"character":4}},"rangeLength":0,"text":"// "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 300

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":12,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8836

{"jsonrpc":"2.0","id":13,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":17},"end":{"line":276,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":14,"result":[]}
<<<
Content-Length: 12257

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":5},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    // delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 405

{"jsonrpc":"2.0","id":15,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":14},"end":{"line":271,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":15,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":6},"contentChanges":[{"range":{"start":{"line":271,"character":4},"end":{"line":271,"character":4}},"rangeLength":0,"text":"// "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 300

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":16,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":17,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":18,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":17},"end":{"line":271,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":18,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":15}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":19,"result":null}
<<<
Content-Length: 12260

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":6},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    // delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    // delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":7},"contentChanges":[{"range":{"start":{"line":271,"character":4},"end":{"line":271,"character":7}},"rangeLength":3,"text":""}]}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":20,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":14},"end":{"line":271,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":21,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":8},"contentChanges":[{"range":{"start":{"line":276,"character":4},"end":{"line":276,"character":7}},"rangeLength":3,"text":""}]}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":22,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":14},"end":{"line":276,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":23,"result":[]}
<<<
Content-Length: 12254

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":8},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 405

{"jsonrpc":"2.0","id":24,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":14},"end":{"line":271,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":24,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":25}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":25,"result":null}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":4},"end":{"line":270,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":26,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":4}}}
>>>
Content-Length: 252

{"jsonrpc":"2.0","id":27,"result":{"contents":{"kind":"markdown","value":"### variable `MOTORservo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo MOTORservo\n```"},"range":{"start":{"line":270,"character":4},"end":{"line":270,"character":14}}}}
<<<
Content-Length: 334

{"jsonrpc":"2.0","id":28,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":5}}}
>>>
Content-Length: 323

{"jsonrpc":"2.0","id":28,"result":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","range":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}}]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":29,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":13}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":29,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":30,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":15}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":30,"result":null}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":14},"end":{"line":271,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":31,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 434

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"contentChanges":[{"range":{"start":{"line":271,"character":14},"end":{"line":271,"character":14}},"rangeLength":0,"text":"\r\n    "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 300

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":32,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 113

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 9715

{"jsonrpc":"2.0","id":33,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":290,"character":30}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":303,"character":18}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":34,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 446

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":10},"contentChanges":[{"range":{"start":{"line":272,"character":4},"end":{"line":272,"character":4}},"rangeLength":0,"text":"MOTORservo.write(45);"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 300

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 9715

{"jsonrpc":"2.0","id":34,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":290,"character":30}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":303,"character":18}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}Content-Length: 9715

{"jsonrpc":"2.0","id":35,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":290,"character":30}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":303,"character":18}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":36,"result":[]}
<<<
Content-Length: 12284

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":10},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(45);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 405

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":14},"end":{"line":277,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":37,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":11},"contentChanges":[{"range":{"start":{"line":277,"character":14},"end":{"line":277,"character":14}},"rangeLength":0,"text":"\r\n    "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}Content-Length: 300

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 9715

{"jsonrpc":"2.0","id":38,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":290,"character":30}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":303,"character":18}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}Content-Length: 9067

{"jsonrpc":"2.0","id":39,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 446

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":12},"contentChanges":[{"range":{"start":{"line":278,"character":4},"end":{"line":278,"character":4}},"rangeLength":0,"text":"MOTORservo.write(45);"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 300

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 9067

{"jsonrpc":"2.0","id":40,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 9067

{"jsonrpc":"2.0","id":41,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":278,"character":25},"end":{"line":278,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":42,"result":[]}
<<<
Content-Length: 12313

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":12},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(45);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(45);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 342

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":23}}}
>>>
Content-Length: 853

{"jsonrpc":"2.0","id":43,"result":[{"range":{"start":{"line":76,"character":15},"end":{"line":76,"character":20}},"kind":1},{"range":{"start":{"line":152,"character":15},"end":{"line":152,"character":20}},"kind":1},{"range":{"start":{"line":161,"character":19},"end":{"line":161,"character":24}},"kind":1},{"range":{"start":{"line":212,"character":15},"end":{"line":212,"character":20}},"kind":1},{"range":{"start":{"line":239,"character":15},"end":{"line":239,"character":20}},"kind":1},{"range":{"start":{"line":270,"character":15},"end":{"line":270,"character":20}},"kind":1},{"range":{"start":{"line":272,"character":15},"end":{"line":272,"character":20}},"kind":1},{"range":{"start":{"line":276,"character":15},"end":{"line":276,"character":20}},"kind":1},{"range":{"start":{"line":278,"character":15},"end":{"line":278,"character":20}},"kind":1}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":44,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":13},"contentChanges":[{"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":23}},"rangeLength":2,"text":"9"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}Content-Length: 300

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 9067

{"jsonrpc":"2.0","id":45,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 9067

{"jsonrpc":"2.0","id":46,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}Content-Length: 300

{"jsonrpc":"2.0","id":47,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":14},"contentChanges":[{"range":{"start":{"line":272,"character":22},"end":{"line":272,"character":22}},"rangeLength":0,"text":"0"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}Content-Length: 300

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}Content-Length: 9067

{"jsonrpc":"2.0","id":47,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 9067

{"jsonrpc":"2.0","id":48,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":23},"end":{"line":272,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":49,"result":[]}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":22}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":50,"result":[]}
<<<
Content-Length: 12313

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":14},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(45);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 405

{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":278,"character":21},"end":{"line":278,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":51,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":15},"contentChanges":[{"range":{"start":{"line":278,"character":21},"end":{"line":278,"character":23}},"rangeLength":2,"text":"9"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":52}}Content-Length: 300

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 9067

{"jsonrpc":"2.0","id":52,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 9067

{"jsonrpc":"2.0","id":53,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":53}}Content-Length: 300

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":16},"contentChanges":[{"range":{"start":{"line":278,"character":22},"end":{"line":278,"character":22}},"rangeLength":0,"text":"0"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":54}}Content-Length: 300

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 9067

{"jsonrpc":"2.0","id":54,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 9067

{"jsonrpc":"2.0","id":55,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":17}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":279,"character":30}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":278,"character":23},"end":{"line":278,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":56,"result":[]}
<<<
Content-Length: 12313

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":16},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 330

{"jsonrpc":"2.0","id":57,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":12}}}
>>>
Content-Length: 252

{"jsonrpc":"2.0","id":57,"result":{"contents":{"kind":"markdown","value":"### variable `MOTORservo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo MOTORservo\n```"},"range":{"start":{"line":272,"character":4},"end":{"line":272,"character":14}}}}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":4},"end":{"line":271,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":58,"result":[]}
<<<
Content-Length: 334

{"jsonrpc":"2.0","id":59,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":4}}}
>>>
Content-Length: 239

{"jsonrpc":"2.0","id":59,"result":[{"uri":"file:///C:/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring.c","range":{"start":{"line":105,"character":5},"end":{"line":105,"character":10}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 12898

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring.c","languageId":"c","version":1,"text":"/*\n  wiring.c - Partial implementation of the Wiring API for the ATmega8.\n  Part of Arduino - http://www.arduino.cc/\n\n  Copyright (c) 2005-2006 David A. Mellis\n\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation; either\n  version 2.1 of the License, or (at your option) any later version.\n\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#include \"wiring_private.h\"\n\n// the prescaler is set so that timer0 ticks every 64 clock cycles, and the\n// the overflow handler is called every 256 ticks.\n#define MICROSECONDS_PER_TIMER0_OVERFLOW (clockCyclesToMicroseconds(64 * 256))\n\n// the whole number of milliseconds per timer0 overflow\n#define MILLIS_INC (MICROSECONDS_PER_TIMER0_OVERFLOW / 1000)\n\n// the fractional number of milliseconds per timer0 overflow. we shift right\n// by three to fit these numbers into a byte. (for the clock speeds we care\n// about - 8 and 16 MHz - this doesn't lose precision.)\n#define FRACT_INC ((MICROSECONDS_PER_TIMER0_OVERFLOW % 1000) >> 3)\n#define FRACT_MAX (1000 >> 3)\n\nvolatile unsigned long timer0_overflow_count = 0;\nvolatile unsigned long timer0_millis = 0;\nstatic unsigned char timer0_fract = 0;\n\n#if defined(TIM0_OVF_vect)\nISR(TIM0_OVF_vect)\n#else\nISR(TIMER0_OVF_vect)\n#endif\n{\n\t// copy these to local variables so they can be stored in registers\n\t// (volatile variables must be read from memory on every access)\n\tunsigned long m = timer0_millis;\n\tunsigned char f = timer0_fract;\n\n\tm += MILLIS_INC;\n\tf += FRACT_INC;\n\tif (f >= FRACT_MAX) {\n\t\tf -= FRACT_MAX;\n\t\tm += 1;\n\t}\n\n\ttimer0_fract = f;\n\ttimer0_millis = m;\n\ttimer0_overflow_count++;\n}\n\nunsigned long millis()\n{\n\tunsigned long m;\n\tuint8_t oldSREG = SREG;\n\n\t// disable interrupts while we read timer0_millis or we might get an\n\t// inconsistent value (e.g. in the middle of a write to timer0_millis)\n\tcli();\n\tm = timer0_millis;\n\tSREG = oldSREG;\n\n\treturn m;\n}\n\nunsigned long micros() {\n\tunsigned long m;\n\tuint8_t oldSREG = SREG, t;\n\t\n\tcli();\n\tm = timer0_overflow_count;\n#if defined(TCNT0)\n\tt = TCNT0;\n#elif defined(TCNT0L)\n\tt = TCNT0L;\n#else\n\t#error TIMER 0 not defined\n#endif\n\n#ifdef TIFR0\n\tif ((TIFR0 & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#else\n\tif ((TIFR & _BV(TOV0)) && (t < 255))\n\t\tm++;\n#endif\n\n\tSREG = oldSREG;\n\t\n\treturn ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());\n}\n\nvoid delay(unsigned long ms)\n{\n\tuint32_t start = micros();\n\n\twhile (ms > 0) {\n\t\tyield();\n\t\twhile ( ms > 0 && (micros() - start) >= 1000) {\n\t\t\tms--;\n\t\t\tstart += 1000;\n\t\t}\n\t}\n}\n\n/* Delay for the given number of microseconds.  Assumes a 1, 8, 12, 16, 20 or 24 MHz clock. */\nvoid delayMicroseconds(unsigned int us)\n{\n\t// call = 4 cycles + 2 to 4 cycles to init us(2 for constant delay, 4 for variable)\n\n\t// calling avrlib's delay_us() function with low values (e.g. 1 or\n\t// 2 microseconds) gives delays longer than desired.\n\t//delay_us(us);\n#if F_CPU >= 24000000L\n\t// for the 24 MHz clock for the adventurous ones trying to overclock\n\n\t// zero delay fix\n\tif (!us) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/6 of a microsecond (4 cycles)\n\t// per iteration, so execute it six times for each microsecond of\n\t// delay requested.\n\tus *= 6; // x6 us, = 7 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 22 (24) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can subtract 5\n\tus -= 5; //=2 cycles\n\n#elif F_CPU >= 20000000L\n\t// for the 20 MHz clock on rare Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 18 (20) cycles, which is 1us\n\t__asm__ __volatile__ (\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\" \"\\n\\t\"\n\t\t\"nop\"); //just waiting 4 cycles\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes a 1/5 of a microsecond (4 cycles)\n\t// per iteration, so execute it five times for each microsecond of\n\t// delay requested.\n\tus = (us << 2) + us; // x5 us, = 7 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 26 (28) cycles above, remove 7, (7*4=28)\n\t// us is at least 10 so we can subtract 7\n\tus -= 7; // 2 cycles\n\n#elif F_CPU >= 16000000L\n\t// for the 16 MHz clock on most Arduino boards\n\n\t// for a one-microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/4 of a microsecond (4 cycles)\n\t// per iteration, so execute it four times for each microsecond of\n\t// delay requested.\n\tus <<= 2; // x4 us, = 4 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 19 (21) cycles above, remove 5, (5*4=20)\n\t// us is at least 8 so we can subtract 5\n\tus -= 5; // = 2 cycles,\n\n#elif F_CPU >= 12000000L\n\t// for the 12 MHz clock if somebody is working with USB\n\n\t// for a 1 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 1.5us\n\tif (us <= 1) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/3 of a microsecond (4 cycles)\n\t// per iteration, so execute it three times for each microsecond of\n\t// delay requested.\n\tus = (us << 1) + us; // x3 us, = 5 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 20 (22) cycles above, remove 5, (5*4=20)\n\t// us is at least 6 so we can subtract 5\n\tus -= 5; //2 cycles\n\n#elif F_CPU >= 8000000L\n\t// for the 8 MHz internal clock\n\n\t// for a 1 and 2 microsecond delay, simply return.  the overhead\n\t// of the function call takes 14 (16) cycles, which is 2us\n\tif (us <= 2) return; //  = 3 cycles, (4 when true)\n\n\t// the following loop takes 1/2 of a microsecond (4 cycles)\n\t// per iteration, so execute it twice for each microsecond of\n\t// delay requested.\n\tus <<= 1; //x2 us, = 2 cycles\n\n\t// account for the time taken in the preceding commands.\n\t// we just burned 17 (19) cycles above, remove 4, (4*4=16)\n\t// us is at least 6 so we can subtract 4\n\tus -= 4; // = 2 cycles\n\n#else\n\t// for the 1 MHz internal clock (default settings for common Atmega microcontrollers)\n\n\t// the overhead of the function calls is 14 (16) cycles\n\tif (us <= 16) return; //= 3 cycles, (4 when true)\n\tif (us <= 25) return; //= 3 cycles, (4 when true), (must be at least 25 if we want to subtract 22)\n\n\t// compensate for the time taken by the preceding and next commands (about 22 cycles)\n\tus -= 22; // = 2 cycles\n\t// the following loop takes 4 microseconds (4 cycles)\n\t// per iteration, so execute it us/4 times\n\t// us is at least 4, divided by 4 gives us 1 (no zero delay bug)\n\tus >>= 2; // us div 4, = 4 cycles\n\t\n\n#endif\n\n\t// busy wait\n\t__asm__ __volatile__ (\n\t\t\"1: sbiw %0,1\" \"\\n\\t\" // 2 cycles\n\t\t\"brne 1b\" : \"=w\" (us) : \"0\" (us) // 2 cycles\n\t);\n\t// return = 4 cycles\n}\n\nvoid init()\n{\n\t// this needs to be called before setup() or some functions won't\n\t// work there\n\tsei();\n\t\n\t// on the ATmega168, timer 0 is also used for fast hardware pwm\n\t// (using phase-correct PWM would mean that timer 0 overflowed half as often\n\t// resulting in different millis() behavior on the ATmega8 and ATmega168)\n#if defined(TCCR0A) && defined(WGM01)\n\tsbi(TCCR0A, WGM01);\n\tsbi(TCCR0A, WGM00);\n#endif\n\n\t// set timer 0 prescale factor to 64\n#if defined(__AVR_ATmega128__)\n\t// CPU specific: different values for the ATmega128\n\tsbi(TCCR0, CS02);\n#elif defined(TCCR0) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard atmega8\n\tsbi(TCCR0, CS01);\n\tsbi(TCCR0, CS00);\n#elif defined(TCCR0B) && defined(CS01) && defined(CS00)\n\t// this combination is for the standard 168/328/1280/2560\n\tsbi(TCCR0B, CS01);\n\tsbi(TCCR0B, CS00);\n#elif defined(TCCR0A) && defined(CS01) && defined(CS00)\n\t// this combination is for the __AVR_ATmega645__ series\n\tsbi(TCCR0A, CS01);\n\tsbi(TCCR0A, CS00);\n#else\n\t#error Timer 0 prescale factor 64 not set correctly\n#endif\n\n\t// enable timer 0 overflow interrupt\n#if defined(TIMSK) && defined(TOIE0)\n\tsbi(TIMSK, TOIE0);\n#elif defined(TIMSK0) && defined(TOIE0)\n\tsbi(TIMSK0, TOIE0);\n#else\n\t#error\tTimer 0 overflow interrupt not set correctly\n#endif\n\n\t// timers 1 and 2 are used for phase-correct hardware pwm\n\t// this is better for motors as it ensures an even waveform\n\t// note, however, that fast pwm mode can achieve a frequency of up\n\t// 8 MHz (with a 16 MHz clock) at 50% duty cycle\n\n#if defined(TCCR1B) && defined(CS11) && defined(CS10)\n\tTCCR1B = 0;\n\n\t// set timer 1 prescale factor to 64\n\tsbi(TCCR1B, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1B, CS10);\n#endif\n#elif defined(TCCR1) && defined(CS11) && defined(CS10)\n\tsbi(TCCR1, CS11);\n#if F_CPU >= 8000000L\n\tsbi(TCCR1, CS10);\n#endif\n#endif\n\t// put timer 1 in 8-bit phase correct pwm mode\n#if defined(TCCR1A) && defined(WGM10)\n\tsbi(TCCR1A, WGM10);\n#endif\n\n\t// set timer 2 prescale factor to 64\n#if defined(TCCR2) && defined(CS22)\n\tsbi(TCCR2, CS22);\n#elif defined(TCCR2B) && defined(CS22)\n\tsbi(TCCR2B, CS22);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n\t// configure timer 2 for phase correct pwm (8-bit)\n#if defined(TCCR2) && defined(WGM20)\n\tsbi(TCCR2, WGM20);\n#elif defined(TCCR2A) && defined(WGM20)\n\tsbi(TCCR2A, WGM20);\n//#else\n\t// Timer 2 not finished (may not be present on this CPU)\n#endif\n\n#if defined(TCCR3B) && defined(CS31) && defined(WGM30)\n\tsbi(TCCR3B, CS31);\t\t// set timer 3 prescale factor to 64\n\tsbi(TCCR3B, CS30);\n\tsbi(TCCR3A, WGM30);\t\t// put timer 3 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(TCCR4A) && defined(TCCR4B) && defined(TCCR4D) /* beginning of timer4 block for 32U4 and similar */\n\tsbi(TCCR4B, CS42);\t\t// set timer4 prescale factor to 64\n\tsbi(TCCR4B, CS41);\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4D, WGM40);\t\t// put timer 4 in phase- and frequency-correct PWM mode\t\n\tsbi(TCCR4A, PWM4A);\t\t// enable PWM mode for comparator OCR4A\n\tsbi(TCCR4C, PWM4D);\t\t// enable PWM mode for comparator OCR4D\n#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */\n#if defined(TCCR4B) && defined(CS41) && defined(WGM40)\n\tsbi(TCCR4B, CS41);\t\t// set timer 4 prescale factor to 64\n\tsbi(TCCR4B, CS40);\n\tsbi(TCCR4A, WGM40);\t\t// put timer 4 in 8-bit phase correct pwm mode\n#endif\n#endif /* end timer4 block for ATMEGA1280/2560 and similar */\t\n\n#if defined(TCCR5B) && defined(CS51) && defined(WGM50)\n\tsbi(TCCR5B, CS51);\t\t// set timer 5 prescale factor to 64\n\tsbi(TCCR5B, CS50);\n\tsbi(TCCR5A, WGM50);\t\t// put timer 5 in 8-bit phase correct pwm mode\n#endif\n\n#if defined(ADCSRA)\n\t// set a2d prescaler so we are inside the desired 50-200 KHz range.\n\t#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 8000000 // 8 MHz / 64 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 4000000 // 4 MHz / 32 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 2000000 // 2 MHz / 16 = 125 KHz\n\t\tsbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tcbi(ADCSRA, ADPS0);\n\t#elif F_CPU >= 1000000 // 1 MHz / 8 = 125 KHz\n\t\tcbi(ADCSRA, ADPS2);\n\t\tsbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#else // 128 kHz / 2 = 64 KHz -> This is the closest you can get, the prescaler is 2\n\t\tcbi(ADCSRA, ADPS2);\n\t\tcbi(ADCSRA, ADPS1);\n\t\tsbi(ADCSRA, ADPS0);\n\t#endif\n\t// enable a2d conversions\n\tsbi(ADCSRA, ADEN);\n#endif\n\n\t// the bootloader connects pins 0 and 1 to the USART; disconnect them\n\t// here so they can be used as normal digital i/o; they will be\n\t// reconnected in Serial.begin()\n#if defined(UCSRB)\n\tUCSRB = 0;\n#elif defined(UCSR0B)\n\tUCSR0B = 0;\n#endif\n}\n"}}}Content-Length: 202

{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///c%3A/Users/Administrator/AppData/Local/Arduino15/packages/arduino/hardware/avr/1.8.5/cores/arduino/wiring.c"}}}Content-Length: 335

{"jsonrpc":"2.0","id":60,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":13}}}
>>>
Content-Length: 323

{"jsonrpc":"2.0","id":60,"result":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","range":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}}]}
<<<
Content-Length: 335

{"jsonrpc":"2.0","id":61,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":17}}}
>>>
Content-Length: 237

{"jsonrpc":"2.0","id":61,"result":null,"error":{"code":-32603,"message":"Rel: can't make D:\\Arduino\\libraries\\Servo\\src\\Servo.h relative to C:\\Users\\Administrator\\AppData\\Local\\Temp\\arduino-language-server4045976707\\sketch"}}






Started logging.

<<<
Content-Length: 3382

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":12860,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN - 360\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.2"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 12332

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":16,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 403

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":4},"end":{"line":271,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 404

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 299

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":17},"contentChanges":[{"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"rangeLength":0,"text":"\r\n    "}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 299

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 299

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":18},"contentChanges":[{"range":{"start":{"line":273,"character":4},"end":{"line":273,"character":4}},"rangeLength":0,"text":"delay(50);"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 299

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 404

{"jsonrpc":"2.0","id":7,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":14},"end":{"line":273,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 12331

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 36

{"jsonrpc":"2.0","id":2,"result":[]}Content-Length: 8835

{"jsonrpc":"2.0","id":3,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":273,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 9714

{"jsonrpc":"2.0","id":4,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":274,"character":17}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":292,"character":30}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":305,"character":18}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":280,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":282,"character":0},"end":{"line":291,"character":1}},"selectionRange":{"start":{"line":282,"character":5},"end":{"line":282,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":293,"character":0},"end":{"line":304,"character":1}},"selectionRange":{"start":{"line":293,"character":6},"end":{"line":293,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":306,"character":0},"end":{"line":389,"character":1}},"selectionRange":{"start":{"line":306,"character":5},"end":{"line":306,"character":16}}}]}Content-Length: 9714

{"jsonrpc":"2.0","id":5,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":274,"character":17}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":292,"character":30}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":305,"character":18}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":280,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":282,"character":0},"end":{"line":291,"character":1}},"selectionRange":{"start":{"line":282,"character":5},"end":{"line":282,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":293,"character":0},"end":{"line":304,"character":1}},"selectionRange":{"start":{"line":293,"character":6},"end":{"line":293,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":306,"character":0},"end":{"line":389,"character":1}},"selectionRange":{"start":{"line":306,"character":5},"end":{"line":306,"character":16}}}]}Content-Length: 9714

{"jsonrpc":"2.0","id":6,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":274,"character":17}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":292,"character":30}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":305,"character":18}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":280,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":282,"character":0},"end":{"line":291,"character":1}},"selectionRange":{"start":{"line":282,"character":5},"end":{"line":282,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":293,"character":0},"end":{"line":304,"character":1}},"selectionRange":{"start":{"line":293,"character":6},"end":{"line":293,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":306,"character":0},"end":{"line":389,"character":1}},"selectionRange":{"start":{"line":306,"character":5},"end":{"line":306,"character":16}}}]}Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":18},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 299

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 404

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":279,"character":25},"end":{"line":279,"character":25}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 9714

{"jsonrpc":"2.0","id":8,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":274,"character":17}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":292,"character":30}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":305,"character":18}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":280,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":282,"character":0},"end":{"line":291,"character":1}},"selectionRange":{"start":{"line":282,"character":5},"end":{"line":282,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":293,"character":0},"end":{"line":304,"character":1}},"selectionRange":{"start":{"line":293,"character":6},"end":{"line":293,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":306,"character":0},"end":{"line":389,"character":1}},"selectionRange":{"start":{"line":306,"character":5},"end":{"line":306,"character":16}}}]}Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":19},"contentChanges":[{"range":{"start":{"line":279,"character":25},"end":{"line":279,"character":25}},"rangeLength":0,"text":"\r\n    "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 300

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 9715

{"jsonrpc":"2.0","id":10,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":274,"character":17}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":292,"character":30}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":305,"character":18}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":280,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":282,"character":0},"end":{"line":291,"character":1}},"selectionRange":{"start":{"line":282,"character":5},"end":{"line":282,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":293,"character":0},"end":{"line":304,"character":1}},"selectionRange":{"start":{"line":293,"character":6},"end":{"line":293,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":306,"character":0},"end":{"line":389,"character":1}},"selectionRange":{"start":{"line":306,"character":5},"end":{"line":306,"character":16}}}]}Content-Length: 9067

{"jsonrpc":"2.0","id":11,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":274,"character":17}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 435

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"contentChanges":[{"range":{"start":{"line":280,"character":4},"end":{"line":280,"character":4}},"rangeLength":0,"text":"delay(50);"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 300

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 9067

{"jsonrpc":"2.0","id":12,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":274,"character":17}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 9067

{"jsonrpc":"2.0","id":13,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":274,"character":0},"end":{"line":274,"character":17}},"selectionRange":{"start":{"line":274,"character":5},"end":{"line":274,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":280,"character":14},"end":{"line":280,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":14,"result":[]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":12}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":15,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":278,"character":12},"end":{"line":278,"character":13}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":13}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":16,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":273,"character":13},"end":{"line":273,"character":14}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":11}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":17,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":11}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":18,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":10},"end":{"line":271,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":10}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":20,"result":null}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"contentChanges":[{"range":{"start":{"line":271,"character":10},"end":{"line":271,"character":11}},"rangeLength":1,"text":"1"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 300

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":21,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":22,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":11},"end":{"line":271,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":23,"result":[]}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(50);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 330

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":10}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":24,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":11}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":25,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":278,"character":10},"end":{"line":278,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":26,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":22},"contentChanges":[{"range":{"start":{"line":278,"character":10},"end":{"line":278,"character":11}},"rangeLength":1,"text":"1"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 300

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":27,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":28,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":29,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":278,"character":11},"end":{"line":278,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":29,"result":[]}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":276,"character":1},"end":{"line":276,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":30,"result":[]}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":22},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"12","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"12","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"13","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"13","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"14","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"14","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"15","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"15","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"16","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"16","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":31,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":263,"character":35}}}
>>>
Content-Length: 274

{"jsonrpc":"2.0","id":31,"result":{"contents":{"kind":"markdown","value":"### variable `Black_Line`  \n\n---\nType: `int`  \nValue = `400 (0x190)`  \n\n---\n```cpp\nint Black_Line = 400\n```"},"range":{"start":{"line":263,"character":31},"end":{"line":263,"character":41}}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":32,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":33,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":34,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":21}}}
>>>
Content-Length: 853

{"jsonrpc":"2.0","id":35,"result":[{"range":{"start":{"line":76,"character":15},"end":{"line":76,"character":20}},"kind":1},{"range":{"start":{"line":152,"character":15},"end":{"line":152,"character":20}},"kind":1},{"range":{"start":{"line":161,"character":19},"end":{"line":161,"character":24}},"kind":1},{"range":{"start":{"line":212,"character":15},"end":{"line":212,"character":20}},"kind":1},{"range":{"start":{"line":239,"character":15},"end":{"line":239,"character":20}},"kind":1},{"range":{"start":{"line":270,"character":15},"end":{"line":270,"character":20}},"kind":1},{"range":{"start":{"line":272,"character":15},"end":{"line":272,"character":20}},"kind":1},{"range":{"start":{"line":277,"character":15},"end":{"line":277,"character":20}},"kind":1},{"range":{"start":{"line":279,"character":15},"end":{"line":279,"character":20}},"kind":1}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":36,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":21},"end":{"line":270,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":36,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":21},"end":{"line":270,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":37,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":38,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":38,"result":null}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":23},"contentChanges":[{"range":{"start":{"line":270,"character":21},"end":{"line":270,"character":22}},"rangeLength":1,"text":"1"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}Content-Length: 300

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":39,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":40,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 300

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":24},"contentChanges":[{"range":{"start":{"line":270,"character":22},"end":{"line":270,"character":22}},"rangeLength":0,"text":"3"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}Content-Length: 300

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":41,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":42,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":43,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":23},"end":{"line":270,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":43,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":44,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":44,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":45,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":22}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":45,"result":null}
<<<
Content-Length: 12350

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":24},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 330

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":22}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":46,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":47,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":21}}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"17","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}Content-Length: 853

{"jsonrpc":"2.0","id":48,"result":[{"range":{"start":{"line":76,"character":15},"end":{"line":76,"character":20}},"kind":1},{"range":{"start":{"line":152,"character":15},"end":{"line":152,"character":20}},"kind":1},{"range":{"start":{"line":161,"character":19},"end":{"line":161,"character":24}},"kind":1},{"range":{"start":{"line":212,"character":15},"end":{"line":212,"character":20}},"kind":1},{"range":{"start":{"line":239,"character":15},"end":{"line":239,"character":20}},"kind":1},{"range":{"start":{"line":270,"character":15},"end":{"line":270,"character":20}},"kind":1},{"range":{"start":{"line":272,"character":15},"end":{"line":272,"character":20}},"kind":1},{"range":{"start":{"line":277,"character":15},"end":{"line":277,"character":20}},"kind":1},{"range":{"start":{"line":279,"character":15},"end":{"line":279,"character":20}},"kind":1}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"17","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":21},"end":{"line":277,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":49,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":50,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":21},"end":{"line":277,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":50,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":51,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":22}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":51,"result":null}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":25},"contentChanges":[{"range":{"start":{"line":277,"character":21},"end":{"line":277,"character":23}},"rangeLength":2,"text":"4"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":52}}Content-Length: 300

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":52,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":53,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":22},"end":{"line":277,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":54,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":55,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":25},"end":{"line":277,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":55,"result":[]}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":25},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"18","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"18","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"19","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"19","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":56,"result":[]}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":25},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"20","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"20","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"21","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"21","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 12349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":25},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"22","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"22","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":57,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":13}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":57,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":273,"character":13},"end":{"line":273,"character":14}}}}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":3},"end":{"line":273,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":58,"result":[]}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":59,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":274,"character":1},"end":{"line":274,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":59,"result":[]}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":60,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":60,"result":[]}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":274,"character":1},"end":{"line":274,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":61,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":14},"end":{"line":271,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":62,"result":[]}
<<<
Content-Length: 59

{"jsonrpc":"2.0","id":63,"method":"shutdown","params":null}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":63,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3382

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":22756,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN - 360\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.2"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 12367

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":1,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 404

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":14},"end":{"line":271,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 299

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 8835

{"jsonrpc":"2.0","id":2,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/27","percentage":3}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"2/27","percentage":7}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":227,"character":47}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":23}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 341

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":23}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":22},"end":{"line":270,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":6,"result":[]}
<<<
Content-Length: 299

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":2},"contentChanges":[{"range":{"start":{"line":270,"character":22},"end":{"line":270,"character":23}},"rangeLength":1,"text":"1"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 299

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8835

{"jsonrpc":"2.0","id":7,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8835

{"jsonrpc":"2.0","id":8,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":23},"end":{"line":270,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}
<<<
Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":2},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(115);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 330

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":23}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":10,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":24}}}
>>>
Content-Length: 853

{"jsonrpc":"2.0","id":11,"result":[{"range":{"start":{"line":76,"character":15},"end":{"line":76,"character":20}},"kind":1},{"range":{"start":{"line":152,"character":15},"end":{"line":152,"character":20}},"kind":1},{"range":{"start":{"line":161,"character":19},"end":{"line":161,"character":24}},"kind":1},{"range":{"start":{"line":212,"character":15},"end":{"line":212,"character":20}},"kind":1},{"range":{"start":{"line":239,"character":15},"end":{"line":239,"character":20}},"kind":1},{"range":{"start":{"line":270,"character":15},"end":{"line":270,"character":20}},"kind":1},{"range":{"start":{"line":272,"character":15},"end":{"line":272,"character":20}},"kind":1},{"range":{"start":{"line":277,"character":15},"end":{"line":277,"character":20}},"kind":1},{"range":{"start":{"line":279,"character":15},"end":{"line":279,"character":20}},"kind":1}]}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":23},"end":{"line":270,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":12,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":270,"character":23}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":13,"result":null}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":3},"contentChanges":[{"range":{"start":{"line":270,"character":23},"end":{"line":270,"character":24}},"rangeLength":1,"text":"0"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 300

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":14,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":15,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":270,"character":24},"end":{"line":270,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":16,"result":[]}
<<<
Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":3},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":23}}}
>>>
Content-Length: 302

{"jsonrpc":"2.0","id":17,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":272,"character":23},"end":{"line":272,"character":24}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":18,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":22}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":18,"result":null}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":23}}}
>>>
Content-Length: 853

{"jsonrpc":"2.0","id":19,"result":[{"range":{"start":{"line":76,"character":15},"end":{"line":76,"character":20}},"kind":1},{"range":{"start":{"line":152,"character":15},"end":{"line":152,"character":20}},"kind":1},{"range":{"start":{"line":161,"character":19},"end":{"line":161,"character":24}},"kind":1},{"range":{"start":{"line":212,"character":15},"end":{"line":212,"character":20}},"kind":1},{"range":{"start":{"line":239,"character":15},"end":{"line":239,"character":20}},"kind":1},{"range":{"start":{"line":270,"character":15},"end":{"line":270,"character":20}},"kind":1},{"range":{"start":{"line":272,"character":15},"end":{"line":272,"character":20}},"kind":1},{"range":{"start":{"line":277,"character":15},"end":{"line":277,"character":20}},"kind":1},{"range":{"start":{"line":279,"character":15},"end":{"line":279,"character":20}},"kind":1}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":20,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":20,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":21,"result":null}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":25},"end":{"line":277,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":22,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":23}}}
>>>
Content-Length: 302

{"jsonrpc":"2.0","id":23,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":277,"character":23},"end":{"line":277,"character":24}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":22}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":24,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":25,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":22}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":25,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":23}}}
>>>
Content-Length: 853

{"jsonrpc":"2.0","id":26,"result":[{"range":{"start":{"line":76,"character":15},"end":{"line":76,"character":20}},"kind":1},{"range":{"start":{"line":152,"character":15},"end":{"line":152,"character":20}},"kind":1},{"range":{"start":{"line":161,"character":19},"end":{"line":161,"character":24}},"kind":1},{"range":{"start":{"line":212,"character":15},"end":{"line":212,"character":20}},"kind":1},{"range":{"start":{"line":239,"character":15},"end":{"line":239,"character":20}},"kind":1},{"range":{"start":{"line":270,"character":15},"end":{"line":270,"character":20}},"kind":1},{"range":{"start":{"line":272,"character":15},"end":{"line":272,"character":20}},"kind":1},{"range":{"start":{"line":277,"character":15},"end":{"line":277,"character":20}},"kind":1},{"range":{"start":{"line":279,"character":15},"end":{"line":279,"character":20}},"kind":1}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":27,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":21},"end":{"line":277,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":27,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":4},"contentChanges":[{"range":{"start":{"line":277,"character":21},"end":{"line":277,"character":23}},"rangeLength":2,"text":"7"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}Content-Length: 300

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":28,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":29,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":22},"end":{"line":277,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":30,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":5},"contentChanges":[{"range":{"start":{"line":277,"character":22},"end":{"line":277,"character":22}},"rangeLength":0,"text":"0"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 300

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":31,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":32,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":33,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":23},"end":{"line":277,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":33,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":25},"end":{"line":277,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":34,"result":[]}
<<<
Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":5},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":10}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":35,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":271,"character":11}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":36,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":11},"end":{"line":271,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":37,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":10},"end":{"line":271,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":38,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":6},"contentChanges":[{"range":{"start":{"line":271,"character":10},"end":{"line":271,"character":12}},"rangeLength":2,"text":"8"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}Content-Length: 300

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":39,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8836

{"jsonrpc":"2.0","id":40,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":11},"end":{"line":271,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":41,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":7},"contentChanges":[{"range":{"start":{"line":271,"character":11},"end":{"line":271,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 300

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":42,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":43,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":271,"character":12},"end":{"line":271,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":44,"result":[]}
<<<
Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":7},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 330

{"jsonrpc":"2.0","id":45,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":280,"character":12}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":45,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":280,"character":12},"end":{"line":280,"character":13}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":46,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":280,"character":12}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":46,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":280,"character":12},"end":{"line":280,"character":13}}}}Content-Length: 118

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":280,"character":11}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":47,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":48,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":280,"character":11}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":48,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":49,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":11}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":49,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":11}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":50,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":8},"contentChanges":[{"range":{"start":{"line":278,"character":10},"end":{"line":278,"character":12}},"rangeLength":2,"text":"8"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}Content-Length: 300

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":51,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":52,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":52}}Content-Length: 300

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"contentChanges":[{"range":{"start":{"line":278,"character":11},"end":{"line":278,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":53}}Content-Length: 300

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":53,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 113

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8836

{"jsonrpc":"2.0","id":54,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":55,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":277,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":55,"result":null}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":278,"character":12},"end":{"line":278,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":56,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":57,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":277,"character":25},"end":{"line":277,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":57,"result":[]}
<<<
Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12348

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":9},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":279,"character":25},"end":{"line":279,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":58,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":59,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":13}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":59,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":278,"character":13},"end":{"line":278,"character":14}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":60,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":12}}}
>>>
Content-Length: 288

{"jsonrpc":"2.0","id":60,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":278,"character":12},"end":{"line":278,"character":13}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":61,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":11}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":61,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":62,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":278,"character":11}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":62,"result":null}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":10},"contentChanges":[{"range":{"start":{"line":279,"character":25},"end":{"line":279,"character":25}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":63}}Content-Length: 300

{"jsonrpc":"2.0","id":64,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":63,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 8836

{"jsonrpc":"2.0","id":64,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}
<<<
Content-Length: 12350

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":10},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nint leftDistance = 0;\r\nint middleDistance = 0;\r\nint rightDistance = 0;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"12","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"12","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":65,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":36,"character":36}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":65,"result":null}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":66,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":36,"character":36}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":66,"result":null}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":67,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":34,"character":41}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":67,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":68,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":106,"character":11}}}
>>>
Content-Length: 269

{"jsonrpc":"2.0","id":68,"result":{"contents":{"kind":"markdown","value":"### variable `Stop`  \n\n---\nType: `const int`  \nValue = `0`  \nstop  \n\n---\n```cpp\nconst int Stop = 0\n```"},"range":{"start":{"line":106,"character":9},"end":{"line":106,"character":13}}}}
<<<
Content-Length: 341

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":18,"character":34}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":69,"result":[]}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":18,"character":34},"end":{"line":18,"character":34}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":70,"result":[]}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":71,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":10,"character":42}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":71,"result":null}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":72,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":34,"character":53}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":72,"result":null}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":73,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":34,"character":53}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":73,"result":null}
<<<
Content-Length: 329

{"jsonrpc":"2.0","id":74,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":28,"character":34}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":74,"result":null}
<<<
Content-Length: 402

{"jsonrpc":"2.0","id":75,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":45,"character":0},"end":{"line":47,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":75,"result":[]}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":76,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 425

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":11},"contentChanges":[{"range":{"start":{"line":45,"character":0},"end":{"line":47,"character":22}},"rangeLength":70,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":76}}Content-Length: 300

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8836

{"jsonrpc":"2.0","id":76,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"leftDistance","detail":"int","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":20}},"selectionRange":{"start":{"line":45,"character":4},"end":{"line":45,"character":16}}},{"name":"middleDistance","detail":"int","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":22}},"selectionRange":{"start":{"line":46,"character":4},"end":{"line":46,"character":18}}},{"name":"rightDistance","detail":"int","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":21}},"selectionRange":{"start":{"line":47,"character":4},"end":{"line":47,"character":17}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":24}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":9},"end":{"line":50,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":17}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":18}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":53,"character":0},"end":{"line":53,"character":19}},"selectionRange":{"start":{"line":53,"character":4},"end":{"line":53,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":79,"character":1}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":81,"character":0},"end":{"line":100,"character":1}},"selectionRange":{"start":{"line":81,"character":5},"end":{"line":81,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":102,"character":0},"end":{"line":148,"character":1}},"selectionRange":{"start":{"line":102,"character":5},"end":{"line":102,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":150,"character":0},"end":{"line":208,"character":1}},"selectionRange":{"start":{"line":150,"character":5},"end":{"line":150,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":235,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":237,"character":0},"end":{"line":267,"character":1}},"selectionRange":{"start":{"line":237,"character":5},"end":{"line":237,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":268,"character":0},"end":{"line":274,"character":1}},"selectionRange":{"start":{"line":268,"character":5},"end":{"line":268,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":275,"character":0},"end":{"line":281,"character":1}},"selectionRange":{"start":{"line":275,"character":5},"end":{"line":275,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":283,"character":0},"end":{"line":292,"character":1}},"selectionRange":{"start":{"line":283,"character":5},"end":{"line":283,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":294,"character":0},"end":{"line":305,"character":1}},"selectionRange":{"start":{"line":294,"character":6},"end":{"line":294,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":307,"character":0},"end":{"line":390,"character":1}},"selectionRange":{"start":{"line":307,"character":5},"end":{"line":307,"character":16}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"13","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8197

{"jsonrpc":"2.0","id":77,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":24}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":19}},"selectionRange":{"start":{"line":48,"character":9},"end":{"line":48,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":17}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":18}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":19}},"selectionRange":{"start":{"line":51,"character":4},"end":{"line":51,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":12}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":146,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":206,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":208,"character":0},"end":{"line":233,"character":1}},"selectionRange":{"start":{"line":208,"character":5},"end":{"line":208,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":235,"character":0},"end":{"line":265,"character":1}},"selectionRange":{"start":{"line":235,"character":5},"end":{"line":235,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":266,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":266,"character":5},"end":{"line":266,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"13","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 423

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":12},"contentChanges":[{"range":{"start":{"line":44,"character":0},"end":{"line":45,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":78}}Content-Length: 300

{"jsonrpc":"2.0","id":79,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8197

{"jsonrpc":"2.0","id":78,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":24}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":19}},"selectionRange":{"start":{"line":48,"character":9},"end":{"line":48,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":17}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":18}},"selectionRange":{"start":{"line":50,"character":5},"end":{"line":50,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":51,"character":0},"end":{"line":51,"character":19}},"selectionRange":{"start":{"line":51,"character":4},"end":{"line":51,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":12}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":98,"character":1}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":146,"character":1}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":206,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":208,"character":0},"end":{"line":233,"character":1}},"selectionRange":{"start":{"line":208,"character":5},"end":{"line":208,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":235,"character":0},"end":{"line":265,"character":1}},"selectionRange":{"start":{"line":235,"character":5},"end":{"line":235,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":266,"character":0},"end":{"line":272,"character":1}},"selectionRange":{"start":{"line":266,"character":5},"end":{"line":266,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":290,"character":1}},"selectionRange":{"start":{"line":281,"character":5},"end":{"line":281,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":303,"character":1}},"selectionRange":{"start":{"line":292,"character":6},"end":{"line":292,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":388,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":16}}}]}Content-Length: 10584

{"jsonrpc":"2.0","id":79,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":24}},"selectionRange":{"start":{"line":46,"character":5},"end":{"line":46,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":19}},"selectionRange":{"start":{"line":47,"character":9},"end":{"line":47,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":17}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":18}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":4},"end":{"line":50,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":12}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":11}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":79,"character":29}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":100,"character":18}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":148,"character":18}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":208,"character":0},"end":{"line":208,"character":18}},"selectionRange":{"start":{"line":208,"character":5},"end":{"line":208,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":235,"character":0},"end":{"line":235,"character":16}},"selectionRange":{"start":{"line":235,"character":5},"end":{"line":235,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":266,"character":0},"end":{"line":266,"character":17}},"selectionRange":{"start":{"line":266,"character":5},"end":{"line":266,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":30}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":6},"end":{"line":281,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":292,"character":18}},"selectionRange":{"start":{"line":292,"character":5},"end":{"line":292,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":78,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":78,"character":5},"end":{"line":78,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":145,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":147,"character":0},"end":{"line":205,"character":1}},"selectionRange":{"start":{"line":147,"character":5},"end":{"line":147,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":207,"character":0},"end":{"line":232,"character":1}},"selectionRange":{"start":{"line":207,"character":5},"end":{"line":207,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":234,"character":0},"end":{"line":264,"character":1}},"selectionRange":{"start":{"line":234,"character":5},"end":{"line":234,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":265,"character":0},"end":{"line":271,"character":1}},"selectionRange":{"start":{"line":265,"character":5},"end":{"line":265,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":272,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":272,"character":5},"end":{"line":272,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}
<<<
Content-Length: 12272

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":12},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 300

{"jsonrpc":"2.0","id":80,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 424

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":13},"contentChanges":[{"range":{"start":{"line":43,"character":21},"end":{"line":44,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":80}}Content-Length: 300

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 10584

{"jsonrpc":"2.0","id":80,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":24}},"selectionRange":{"start":{"line":46,"character":5},"end":{"line":46,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":19}},"selectionRange":{"start":{"line":47,"character":9},"end":{"line":47,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":17}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":18}},"selectionRange":{"start":{"line":49,"character":5},"end":{"line":49,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":50,"character":0},"end":{"line":50,"character":19}},"selectionRange":{"start":{"line":50,"character":4},"end":{"line":50,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":12}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":11}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":79,"character":0},"end":{"line":79,"character":29}},"selectionRange":{"start":{"line":79,"character":5},"end":{"line":79,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":100,"character":0},"end":{"line":100,"character":18}},"selectionRange":{"start":{"line":100,"character":5},"end":{"line":100,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":148,"character":18}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":208,"character":0},"end":{"line":208,"character":18}},"selectionRange":{"start":{"line":208,"character":5},"end":{"line":208,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":235,"character":0},"end":{"line":235,"character":16}},"selectionRange":{"start":{"line":235,"character":5},"end":{"line":235,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":266,"character":0},"end":{"line":266,"character":17}},"selectionRange":{"start":{"line":266,"character":5},"end":{"line":266,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":273,"character":0},"end":{"line":273,"character":30}},"selectionRange":{"start":{"line":273,"character":5},"end":{"line":273,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":281,"character":0},"end":{"line":281,"character":30}},"selectionRange":{"start":{"line":281,"character":6},"end":{"line":281,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":292,"character":0},"end":{"line":292,"character":18}},"selectionRange":{"start":{"line":292,"character":5},"end":{"line":292,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":305,"character":0},"end":{"line":76,"character":1}},"selectionRange":{"start":{"line":305,"character":5},"end":{"line":305,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":78,"character":0},"end":{"line":97,"character":1}},"selectionRange":{"start":{"line":78,"character":5},"end":{"line":78,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":99,"character":0},"end":{"line":145,"character":1}},"selectionRange":{"start":{"line":99,"character":5},"end":{"line":99,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":147,"character":0},"end":{"line":205,"character":1}},"selectionRange":{"start":{"line":147,"character":5},"end":{"line":147,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":207,"character":0},"end":{"line":232,"character":1}},"selectionRange":{"start":{"line":207,"character":5},"end":{"line":207,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":234,"character":0},"end":{"line":264,"character":1}},"selectionRange":{"start":{"line":234,"character":5},"end":{"line":234,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":265,"character":0},"end":{"line":271,"character":1}},"selectionRange":{"start":{"line":265,"character":5},"end":{"line":265,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":272,"character":0},"end":{"line":278,"character":1}},"selectionRange":{"start":{"line":272,"character":5},"end":{"line":272,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":280,"character":0},"end":{"line":289,"character":1}},"selectionRange":{"start":{"line":280,"character":5},"end":{"line":280,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":291,"character":0},"end":{"line":302,"character":1}},"selectionRange":{"start":{"line":291,"character":6},"end":{"line":291,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":304,"character":0},"end":{"line":387,"character":1}},"selectionRange":{"start":{"line":304,"character":5},"end":{"line":304,"character":16}}}]}Content-Length: 8401

{"jsonrpc":"2.0","id":81,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":12}},"selectionRange":{"start":{"line":55,"character":5},"end":{"line":55,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":52,"character":11}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":9}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":204,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":206,"character":0},"end":{"line":231,"character":1}},"selectionRange":{"start":{"line":206,"character":5},"end":{"line":206,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":233,"character":0},"end":{"line":263,"character":1}},"selectionRange":{"start":{"line":233,"character":5},"end":{"line":233,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":264,"character":0},"end":{"line":270,"character":1}},"selectionRange":{"start":{"line":264,"character":5},"end":{"line":264,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":271,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":271,"character":5},"end":{"line":271,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 403

{"jsonrpc":"2.0","id":82,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":43,"character":21},"end":{"line":43,"character":21}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":82,"result":[]}
<<<
Content-Length: 12268

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":13},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    middleDistance = UT_distance;\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"14","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"14","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":83,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":136,"character":21}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":83,"result":null}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":84,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":279,"character":35}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":84,"result":null}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":85,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":151,"character":33},"end":{"line":151,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":85,"result":[]}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":151,"character":11}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":86,"result":[]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":87,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":151,"character":4},"end":{"line":151,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":87,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":88,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":159,"character":30}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":88,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":89,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":159,"character":31}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":89,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":90,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":159,"character":23},"end":{"line":159,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":90,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":159,"character":23},"end":{"line":159,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":91,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":92,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":159,"character":23},"end":{"line":159,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":92,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":93,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":159,"character":23},"end":{"line":159,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":93,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":94,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":159,"character":23},"end":{"line":159,"character":37}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":94,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":95,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":162,"character":19},"end":{"line":162,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":95,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":96,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":149,"character":10}}}
>>>
Content-Length: 263

{"jsonrpc":"2.0","id":96,"result":{"contents":{"kind":"markdown","value":"### variable `UT_distance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint UT_distance = 0\n```"},"range":{"start":{"line":149,"character":4},"end":{"line":149,"character":15}}}}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":97,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":149,"character":10}}}
>>>
Content-Length: 1122

{"jsonrpc":"2.0","id":97,"result":[{"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}},"kind":1},{"range":{"start":{"line":149,"character":4},"end":{"line":149,"character":15}},"kind":3},{"range":{"start":{"line":150,"character":19},"end":{"line":150,"character":30}},"kind":2},{"range":{"start":{"line":209,"character":4},"end":{"line":209,"character":15}},"kind":3},{"range":{"start":{"line":210,"character":19},"end":{"line":210,"character":30}},"kind":2},{"range":{"start":{"line":211,"character":8},"end":{"line":211,"character":19}},"kind":2},{"range":{"start":{"line":215,"character":19},"end":{"line":215,"character":30}},"kind":2},{"range":{"start":{"line":215,"character":34},"end":{"line":215,"character":45}},"kind":2},{"range":{"start":{"line":219,"character":19},"end":{"line":219,"character":30}},"kind":2},{"range":{"start":{"line":219,"character":34},"end":{"line":219,"character":45}},"kind":2},{"range":{"start":{"line":223,"character":19},"end":{"line":223,"character":30}},"kind":2},{"range":{"start":{"line":223,"character":34},"end":{"line":223,"character":45}},"kind":2}]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":98,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":149,"character":4},"end":{"line":149,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":98,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":99,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":151,"character":24}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":99,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":100,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":151,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":100,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":101,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":151,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":101,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":102,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":151,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":102,"result":null}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":103,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":151,"character":0},"end":{"line":151,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":103,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":104,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":151,"character":4}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":104,"result":null}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":105,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":14},"contentChanges":[{"range":{"start":{"line":151,"character":0},"end":{"line":151,"character":33}},"rangeLength":33,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":105}}Content-Length: 301

{"jsonrpc":"2.0","id":106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":105,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":204,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":206,"character":0},"end":{"line":231,"character":1}},"selectionRange":{"start":{"line":206,"character":5},"end":{"line":206,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":233,"character":0},"end":{"line":263,"character":1}},"selectionRange":{"start":{"line":233,"character":5},"end":{"line":233,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":264,"character":0},"end":{"line":270,"character":1}},"selectionRange":{"start":{"line":264,"character":5},"end":{"line":264,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":271,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":271,"character":5},"end":{"line":271,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"15","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8194

{"jsonrpc":"2.0","id":106,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":204,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":206,"character":0},"end":{"line":231,"character":1}},"selectionRange":{"start":{"line":206,"character":5},"end":{"line":206,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":233,"character":0},"end":{"line":263,"character":1}},"selectionRange":{"start":{"line":233,"character":5},"end":{"line":233,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":264,"character":0},"end":{"line":270,"character":1}},"selectionRange":{"start":{"line":264,"character":5},"end":{"line":264,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":271,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":271,"character":5},"end":{"line":271,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"15","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 426

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":15},"contentChanges":[{"range":{"start":{"line":150,"character":32},"end":{"line":151,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":107}}Content-Length: 301

{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":107,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":204,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":206,"character":0},"end":{"line":231,"character":1}},"selectionRange":{"start":{"line":206,"character":5},"end":{"line":206,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":233,"character":0},"end":{"line":263,"character":1}},"selectionRange":{"start":{"line":233,"character":5},"end":{"line":233,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":264,"character":0},"end":{"line":270,"character":1}},"selectionRange":{"start":{"line":264,"character":5},"end":{"line":264,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":271,"character":0},"end":{"line":277,"character":1}},"selectionRange":{"start":{"line":271,"character":5},"end":{"line":271,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":279,"character":0},"end":{"line":288,"character":1}},"selectionRange":{"start":{"line":279,"character":5},"end":{"line":279,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":290,"character":0},"end":{"line":301,"character":1}},"selectionRange":{"start":{"line":290,"character":6},"end":{"line":290,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":303,"character":0},"end":{"line":386,"character":1}},"selectionRange":{"start":{"line":303,"character":5},"end":{"line":303,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":108,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":150,"character":32},"end":{"line":150,"character":32}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":109,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":110,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":17}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":110,"result":null}
<<<
Content-Length: 12231

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":15},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (middleDistance <= 25) \r\n    {\r\n      if (middleDistance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"middleDistance:  \");\r\n        Serial.println(middleDistance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 343

{"jsonrpc":"2.0","id":111,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":17}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":111,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":112,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":152,"character":8},"end":{"line":152,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":112,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":113,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":18}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":113,"result":null}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":114,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":18}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":114,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"16","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"16","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":18}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":115,"result":null}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":152,"character":8},"end":{"line":152,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":116,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":117,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":152,"character":8},"end":{"line":152,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":117,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":152,"character":8},"end":{"line":152,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":118,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 798

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":16},"contentChanges":[{"range":{"start":{"line":158,"character":23},"end":{"line":158,"character":37}},"rangeLength":14,"text":"UT_distance"},{"range":{"start":{"line":157,"character":22},"end":{"line":157,"character":36}},"rangeLength":14,"text":"UT_distance"},{"range":{"start":{"line":154,"character":10},"end":{"line":154,"character":24}},"rangeLength":14,"text":"UT_distance"},{"range":{"start":{"line":152,"character":8},"end":{"line":152,"character":22}},"rangeLength":14,"text":"UT_distance"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":119}}Content-Length: 301

{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":119,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"17","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8194

{"jsonrpc":"2.0","id":120,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"17","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":152,"character":19},"end":{"line":152,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":121,"result":[]}
<<<
Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":16},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 406

{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":158,"character":36},"end":{"line":158,"character":36}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":122,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"18","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"18","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":123,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":158,"character":26}}}
>>>
Content-Length: 275

{"jsonrpc":"2.0","id":123,"result":{"contents":{"kind":"markdown","value":"### variable `UT_distance`  \n\n---\nType: `int`  \nValue = `0`  \nPassed  \n\n---\n```cpp\nint UT_distance = 0\n```"},"range":{"start":{"line":158,"character":23},"end":{"line":158,"character":34}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":124,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":158,"character":25}}}
>>>
Content-Length: 275

{"jsonrpc":"2.0","id":124,"result":{"contents":{"kind":"markdown","value":"### variable `UT_distance`  \n\n---\nType: `int`  \nValue = `0`  \nPassed  \n\n---\n```cpp\nint UT_distance = 0\n```"},"range":{"start":{"line":158,"character":23},"end":{"line":158,"character":34}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":125,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":154,"character":12}}}
>>>
Content-Length: 265

{"jsonrpc":"2.0","id":125,"result":{"contents":{"kind":"markdown","value":"### variable `UT_distance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint UT_distance = 0\n```"},"range":{"start":{"line":154,"character":10},"end":{"line":154,"character":21}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":126,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":158,"character":19}}}
>>>
Content-Length: 324

{"jsonrpc":"2.0","id":126,"result":{"contents":{"kind":"markdown","value":"### instance-method `println`  \n\n---\n→ `size_t`  \nParameters:  \n- `int`\n- `int = 10`\n\n---\n```cpp\n// In Print\npublic: size_t println(int, int = DEC)\n```"},"range":{"start":{"line":158,"character":15},"end":{"line":158,"character":22}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":127,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":161,"character":14}}}
>>>
Content-Length: 289

{"jsonrpc":"2.0","id":127,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":161,"character":10},"end":{"line":161,"character":15}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":128,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":8}}}
>>>
Content-Length: 264

{"jsonrpc":"2.0","id":128,"result":{"contents":{"kind":"markdown","value":"### variable `UT_distance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint UT_distance = 0\n```"},"range":{"start":{"line":152,"character":8},"end":{"line":152,"character":19}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":129,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":7}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":129,"result":null}
<<<
Content-Length: 342

{"jsonrpc":"2.0","id":130,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":8}}}
>>>
Content-Length: 1395

{"jsonrpc":"2.0","id":130,"result":[{"range":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}},"kind":1},{"range":{"start":{"line":149,"character":4},"end":{"line":149,"character":15}},"kind":3},{"range":{"start":{"line":150,"character":19},"end":{"line":150,"character":30}},"kind":2},{"range":{"start":{"line":152,"character":8},"end":{"line":152,"character":19}},"kind":2},{"range":{"start":{"line":154,"character":10},"end":{"line":154,"character":21}},"kind":2},{"range":{"start":{"line":158,"character":23},"end":{"line":158,"character":34}},"kind":2},{"range":{"start":{"line":208,"character":4},"end":{"line":208,"character":15}},"kind":3},{"range":{"start":{"line":209,"character":19},"end":{"line":209,"character":30}},"kind":2},{"range":{"start":{"line":210,"character":8},"end":{"line":210,"character":19}},"kind":2},{"range":{"start":{"line":214,"character":19},"end":{"line":214,"character":30}},"kind":2},{"range":{"start":{"line":214,"character":34},"end":{"line":214,"character":45}},"kind":2},{"range":{"start":{"line":218,"character":19},"end":{"line":218,"character":30}},"kind":2},{"range":{"start":{"line":218,"character":34},"end":{"line":218,"character":45}},"kind":2},{"range":{"start":{"line":222,"character":19},"end":{"line":222,"character":30}},"kind":2},{"range":{"start":{"line":222,"character":34},"end":{"line":222,"character":45}},"kind":2}]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":131,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":152,"character":8},"end":{"line":152,"character":19}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":131,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":132,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":18}}}
>>>
Content-Length: 264

{"jsonrpc":"2.0","id":132,"result":{"contents":{"kind":"markdown","value":"### variable `UT_distance`  \n\n---\nType: `int`  \nValue = `0`  \n\n---\n```cpp\nint UT_distance = 0\n```"},"range":{"start":{"line":152,"character":8},"end":{"line":152,"character":19}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":133,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":19}}}
>>>
Content-Length: 324

{"jsonrpc":"2.0","id":133,"result":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","range":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}}]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":134,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":152,"character":20}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":134,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":135,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":183,"character":16}}}
>>>
Content-Length: 307

{"jsonrpc":"2.0","id":135,"result":{"contents":{"kind":"markdown","value":"### variable `Backward`  \n\n---\nType: `const int`  \nValue = `163 (0xa3)`  \nPassed as Dir  \nback  \n\n---\n```cpp\nconst int Backward = 163\n```"},"range":{"start":{"line":183,"character":16},"end":{"line":183,"character":24}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":136,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":176,"character":16}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":136,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":137,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":171,"character":20}}}
>>>
Content-Length: 263

{"jsonrpc":"2.0","id":137,"result":{"contents":{"kind":"markdown","value":"### variable `model_var`  \n\n---\nType: `char`  \nValue = `0`  \n\n---\n```cpp\nchar model_var = 0\n```"},"range":{"start":{"line":171,"character":13},"end":{"line":171,"character":22}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":138,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":154,"character":29}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":138,"result":null}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":154,"character":7},"end":{"line":154,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":139,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":140,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":154,"character":6},"end":{"line":154,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":140,"result":[]}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":141,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":154,"character":6}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":141,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":142,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":155,"character":11}}}
>>>
Content-Length: 296

{"jsonrpc":"2.0","id":142,"result":{"contents":{"kind":"markdown","value":"### function `Motor`  \n\n---\n→ `void`  \nParameters:  \n- `int Dir`\n- `int Speed`\n\n---\n```cpp\nvoid Motor(int Dir, int Speed)\n```"},"range":{"start":{"line":155,"character":8},"end":{"line":155,"character":13}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":143,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":155,"character":12}}}
>>>
Content-Length: 296

{"jsonrpc":"2.0","id":143,"result":{"contents":{"kind":"markdown","value":"### function `Motor`  \n\n---\n→ `void`  \nParameters:  \n- `int Dir`\n- `int Speed`\n\n---\n```cpp\nvoid Motor(int Dir, int Speed)\n```"},"range":{"start":{"line":155,"character":8},"end":{"line":155,"character":13}}}}
<<<
Content-Length: 336

{"jsonrpc":"2.0","id":144,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":155,"character":13}}}
>>>
Content-Length: 326

{"jsonrpc":"2.0","id":144,"result":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","range":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}}]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":145,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":155,"character":12}}}
>>>
Content-Length: 296

{"jsonrpc":"2.0","id":145,"result":{"contents":{"kind":"markdown","value":"### function `Motor`  \n\n---\n→ `void`  \nParameters:  \n- `int Dir`\n- `int Speed`\n\n---\n```cpp\nvoid Motor(int Dir, int Speed)\n```"},"range":{"start":{"line":155,"character":8},"end":{"line":155,"character":13}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":146,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":167,"character":23}}}
>>>
Content-Length: 297

{"jsonrpc":"2.0","id":146,"result":{"contents":{"kind":"markdown","value":"### function `Motor`  \n\n---\n→ `void`  \nParameters:  \n- `int Dir`\n- `int Speed`\n\n---\n```cpp\nvoid Motor(int Dir, int Speed)\n```"},"range":{"start":{"line":167,"character":22},"end":{"line":167,"character":23}}}}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":147,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":153,"character":0},"end":{"line":165,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":147,"result":[]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":148,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":152,"character":0},"end":{"line":165,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":148,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":149,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":164,"character":20},"end":{"line":164,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":149,"result":[]}
<<<
Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":16},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"19","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"19","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"20","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"20","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":16},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(80);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"21","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"21","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"22","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"22","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":150,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":366,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":150,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":151,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":368,"character":26}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":151,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"23","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"23","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"24","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"24","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":313,"character":17},"end":{"line":313,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":152,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":153,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":310,"character":13},"end":{"line":310,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":153,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":154,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":306,"character":35}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":154,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":155,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":306,"character":36}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":155,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":156,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":306,"character":40}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":156,"result":null}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":157,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":306,"character":25},"end":{"line":306,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":157,"result":[]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":158,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":305,"character":5},"end":{"line":305,"character":5}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":158,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":159,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":304,"character":30},"end":{"line":304,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":159,"result":[]}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":303,"character":1},"end":{"line":303,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":160,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":161,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":309,"character":29}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":161,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":162,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":309,"character":28}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":162,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"25","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"25","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"26","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"26","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":163,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":11}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":163,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":164,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":11}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":164,"result":[]}
<<<
Content-Length: 405

{"jsonrpc":"2.0","id":165,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":9},"end":{"line":266,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":165,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":166,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":267,"character":24},"end":{"line":267,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":166,"result":[]}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":167,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":11}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":167,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":168,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":10},"end":{"line":266,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":168,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":169,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":169,"result":null}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":17},"contentChanges":[{"range":{"start":{"line":266,"character":10},"end":{"line":266,"character":11}},"rangeLength":1,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":170}}Content-Length: 301

{"jsonrpc":"2.0","id":171,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":170,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":171,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":172,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":11},"end":{"line":266,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":172,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":173,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":173,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":174,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":11}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":174,"result":[]}
<<<
Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":17},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(80);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 406

{"jsonrpc":"2.0","id":175,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":10},"end":{"line":273,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":175,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":176,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":18},"contentChanges":[{"range":{"start":{"line":273,"character":10},"end":{"line":273,"character":11}},"rangeLength":1,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":176}}Content-Length: 301

{"jsonrpc":"2.0","id":177,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":176,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":177,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":178,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":11},"end":{"line":273,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":178,"result":[]}
<<<
Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":18},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(110);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(20);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"27","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"27","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"28","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"28","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"29","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"29","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":179,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":179,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":180,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":180,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":181,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":181,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":182,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":182,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":183,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":183,"result":null}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":184,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":19},"contentChanges":[{"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":23}},"rangeLength":1,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":184}}Content-Length: 301

{"jsonrpc":"2.0","id":185,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":184,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":185,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":23},"end":{"line":265,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":186,"result":[]}
<<<
Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":19},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(70);\r\n    delay(20);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 331

{"jsonrpc":"2.0","id":187,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":21}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":187,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":188,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":188,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"30","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"30","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":189,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":189,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":190,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":21}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":190,"result":null}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":191,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"contentChanges":[{"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":22}},"rangeLength":1,"text":"6"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":191}}Content-Length: 301

{"jsonrpc":"2.0","id":192,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":191,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"31","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8194

{"jsonrpc":"2.0","id":192,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"31","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":193,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":22},"end":{"line":272,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":193,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":194,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":194,"result":[]}
<<<
Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"32","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"32","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":20},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90); \r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"33","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"33","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"34","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"34","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":274,"character":25},"end":{"line":274,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":195,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":196,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":274,"character":25}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":196,"result":null}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":197,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"contentChanges":[{"range":{"start":{"line":274,"character":25},"end":{"line":274,"character":26}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":197}}Content-Length: 301

{"jsonrpc":"2.0","id":198,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":197,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":198,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":199,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":274,"character":25},"end":{"line":274,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":199,"result":[]}
<<<
Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":21},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"35","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"35","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"36","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"36","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":269,"character":1},"end":{"line":269,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":200,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":201,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":268,"character":14},"end":{"line":268,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":201,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":202,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":267,"character":24}}}
>>>
Content-Length: 303

{"jsonrpc":"2.0","id":202,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":267,"character":24},"end":{"line":267,"character":25}}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":203,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":258,"character":5}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":203,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"37","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"37","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"38","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"38","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":204,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":204,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":205,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":205,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":206,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":11}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":206,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":207,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":11},"end":{"line":266,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":207,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":208,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":10},"end":{"line":266,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":208,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":209,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":209,"result":null}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":210,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":22},"contentChanges":[{"range":{"start":{"line":266,"character":10},"end":{"line":266,"character":11}},"rangeLength":1,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":210}}Content-Length: 301

{"jsonrpc":"2.0","id":211,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":210,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":211,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":212,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":11},"end":{"line":266,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":212,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":213,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":12}}}
>>>
Content-Length: 253

{"jsonrpc":"2.0","id":213,"result":{"contents":{"kind":"markdown","value":"### variable `MOTORservo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo MOTORservo\n```"},"range":{"start":{"line":272,"character":4},"end":{"line":272,"character":14}}}}
<<<
Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":22},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(20);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 331

{"jsonrpc":"2.0","id":214,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":11}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":214,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":215,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":11}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":215,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":216,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":11}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":216,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":217,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":11},"end":{"line":273,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":217,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"39","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"39","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":10},"end":{"line":273,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":218,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":219,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":219,"result":null}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":220,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":23},"contentChanges":[{"range":{"start":{"line":273,"character":10},"end":{"line":273,"character":11}},"rangeLength":1,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":220}}Content-Length: 301

{"jsonrpc":"2.0","id":221,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":220,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":221,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":222,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":11},"end":{"line":273,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":222,"result":[]}
<<<
Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":23},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"40","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"40","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"41","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"41","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":223,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":21}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":223,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":224,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":21}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":224,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":225,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":225,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":226,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":226,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":227,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":227,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":228,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":228,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":229,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":229,"result":null}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":230,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":24},"contentChanges":[{"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":24}},"rangeLength":2,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":230}}Content-Length: 301

{"jsonrpc":"2.0","id":231,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":230,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":231,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":232,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":25},"contentChanges":[{"range":{"start":{"line":265,"character":23},"end":{"line":265,"character":23}},"rangeLength":0,"text":"5"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":232}}Content-Length: 301

{"jsonrpc":"2.0","id":233,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":232,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":233,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":234,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":24},"end":{"line":265,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":234,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":235,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":26},"end":{"line":265,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":235,"result":[]}
<<<
Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":25},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"42","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"42","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"43","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"43","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":236,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":268,"character":14},"end":{"line":268,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":236,"result":[]}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"44","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"44","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"45","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"45","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":237,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":237,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":238,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":25}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":238,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":239,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":239,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":240,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":22}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":240,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":241,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":22},"end":{"line":272,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":241,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":242,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":242,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":243,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":26},"contentChanges":[{"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":22}},"rangeLength":1,"text":"4"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":243}}Content-Length: 301

{"jsonrpc":"2.0","id":244,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":243,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":244,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":244}}Content-Length: 301

{"jsonrpc":"2.0","id":245,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":27},"contentChanges":[{"range":{"start":{"line":272,"character":22},"end":{"line":272,"character":22}},"rangeLength":0,"text":"5"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":245}}Content-Length: 301

{"jsonrpc":"2.0","id":246,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":245,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":246,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":247,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":23},"end":{"line":272,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":247,"result":[]}
<<<
Content-Length: 12219

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":27},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(450);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 343

{"jsonrpc":"2.0","id":248,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":24}}}
>>>
Content-Length: 854

{"jsonrpc":"2.0","id":248,"result":[{"range":{"start":{"line":72,"character":15},"end":{"line":72,"character":20}},"kind":1},{"range":{"start":{"line":148,"character":15},"end":{"line":148,"character":20}},"kind":1},{"range":{"start":{"line":156,"character":19},"end":{"line":156,"character":24}},"kind":1},{"range":{"start":{"line":207,"character":15},"end":{"line":207,"character":20}},"kind":1},{"range":{"start":{"line":234,"character":15},"end":{"line":234,"character":20}},"kind":1},{"range":{"start":{"line":265,"character":15},"end":{"line":265,"character":20}},"kind":1},{"range":{"start":{"line":267,"character":15},"end":{"line":267,"character":20}},"kind":1},{"range":{"start":{"line":272,"character":15},"end":{"line":272,"character":20}},"kind":1},{"range":{"start":{"line":274,"character":15},"end":{"line":274,"character":20}},"kind":1}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":249,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":24},"end":{"line":272,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":249,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":250,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 427

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":28},"contentChanges":[{"range":{"start":{"line":272,"character":23},"end":{"line":272,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":250}}Content-Length: 301

{"jsonrpc":"2.0","id":251,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":250,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":251,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":252,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":23},"end":{"line":272,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":252,"result":[]}
<<<
Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":28},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 406

{"jsonrpc":"2.0","id":253,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":253,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"46","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"46","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"47","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"47","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"48","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"48","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":254,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":267,"character":12}}}
>>>
Content-Length: 253

{"jsonrpc":"2.0","id":254,"result":{"contents":{"kind":"markdown","value":"### variable `MOTORservo`  \n\n---\nType: `class Servo`  \n\n---\n```cpp\nServo MOTORservo\n```"},"range":{"start":{"line":267,"character":4},"end":{"line":267,"character":14}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":255,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":11}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":255,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":256,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":11}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":256,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":257,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":10},"end":{"line":266,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":257,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":258,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":29},"contentChanges":[{"range":{"start":{"line":266,"character":10},"end":{"line":266,"character":12}},"rangeLength":2,"text":"5"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":258}}Content-Length: 301

{"jsonrpc":"2.0","id":259,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":258,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":259,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":260,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":11},"end":{"line":266,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":260,"result":[]}
<<<
Content-Length: 12217

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":29},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 331

{"jsonrpc":"2.0","id":261,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":261,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":262,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":11}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":262,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":263,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":30},"contentChanges":[{"range":{"start":{"line":273,"character":10},"end":{"line":273,"character":12}},"rangeLength":2,"text":"5"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":263}}Content-Length: 301

{"jsonrpc":"2.0","id":264,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":263,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":264,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":265,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":11},"end":{"line":273,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":265,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":266,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":266,"result":[]}
<<<
Content-Length: 12216

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":30},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"49","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"49","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":267,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":13},"end":{"line":273,"character":13}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":267,"result":[]}
<<<
Content-Length: 12216

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":30},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12216

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":30},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 12216

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":30},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(135);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"50","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"50","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"51","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"51","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":268,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":268,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":269,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":258,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":269,"result":null}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"52","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"52","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"53","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"53","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":270,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":270,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":271,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":271,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":272,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":272,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":273,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":273,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":274,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":24}}}
>>>
Content-Length: 303

{"jsonrpc":"2.0","id":274,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":265,"character":24},"end":{"line":265,"character":25}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":275,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":275,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":276,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":276,"result":null}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":277,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":277,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":278,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":23},"end":{"line":265,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":278,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":279,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":279,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":280,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":280,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":281,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":281,"result":null}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":282,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":24}}}
>>>
Content-Length: 303

{"jsonrpc":"2.0","id":282,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":265,"character":24},"end":{"line":265,"character":25}}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":283,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":23}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":283,"result":null}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":284,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":24},"end":{"line":265,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":284,"result":[]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":285,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":285,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":286,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":265,"character":22}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":286,"result":null}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":287,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":31},"contentChanges":[{"range":{"start":{"line":265,"character":22},"end":{"line":265,"character":24}},"rangeLength":2,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":287}}Content-Length: 301

{"jsonrpc":"2.0","id":288,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":287,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":288,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":289,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":23},"end":{"line":265,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":289,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":290,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":32},"contentChanges":[{"range":{"start":{"line":265,"character":23},"end":{"line":265,"character":23}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":290}}Content-Length: 301

{"jsonrpc":"2.0","id":291,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":290,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":291,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":292,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":265,"character":24},"end":{"line":265,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":292,"result":[]}
<<<
Content-Length: 12216

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":32},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(45);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"54","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"54","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":293,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":23}}}
>>>
Content-Length: 303

{"jsonrpc":"2.0","id":293,"result":{"contents":{"kind":"markdown","value":"### instance-method `write`  \n\n---\n→ `void`  \nParameters:  \n- `int value`\n\n---\n```cpp\n// In Servo\npublic: void write(int value)\n```"},"range":{"start":{"line":272,"character":23},"end":{"line":272,"character":24}}}}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":294,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":272,"character":23}}}
>>>
Content-Length: 854

{"jsonrpc":"2.0","id":294,"result":[{"range":{"start":{"line":72,"character":15},"end":{"line":72,"character":20}},"kind":1},{"range":{"start":{"line":148,"character":15},"end":{"line":148,"character":20}},"kind":1},{"range":{"start":{"line":156,"character":19},"end":{"line":156,"character":24}},"kind":1},{"range":{"start":{"line":207,"character":15},"end":{"line":207,"character":20}},"kind":1},{"range":{"start":{"line":234,"character":15},"end":{"line":234,"character":20}},"kind":1},{"range":{"start":{"line":265,"character":15},"end":{"line":265,"character":20}},"kind":1},{"range":{"start":{"line":267,"character":15},"end":{"line":267,"character":20}},"kind":1},{"range":{"start":{"line":272,"character":15},"end":{"line":272,"character":20}},"kind":1},{"range":{"start":{"line":274,"character":15},"end":{"line":274,"character":20}},"kind":1}]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":295,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":295,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":296,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":33},"contentChanges":[{"range":{"start":{"line":272,"character":21},"end":{"line":272,"character":23}},"rangeLength":2,"text":"6"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":296}}Content-Length: 301

{"jsonrpc":"2.0","id":297,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":296,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"55","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8194

{"jsonrpc":"2.0","id":297,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"55","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":298,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":22},"end":{"line":272,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":298,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":299,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":34},"contentChanges":[{"range":{"start":{"line":272,"character":22},"end":{"line":272,"character":22}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":299}}Content-Length: 301

{"jsonrpc":"2.0","id":300,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":299,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":300,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":301,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":23},"end":{"line":272,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":301,"result":[]}
<<<
Content-Length: 12216

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":34},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 406

{"jsonrpc":"2.0","id":302,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":272,"character":25},"end":{"line":272,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":302,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"56","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"56","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 330

{"jsonrpc":"2.0","id":303,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":9}}}
>>>
Content-Length: 287

{"jsonrpc":"2.0","id":303,"result":{"contents":{"kind":"markdown","value":"### function `delay`  \n\n---\n→ `void`  \nParameters:  \n- `unsigned long ms`\n\n---\n```cpp\nvoid delay(unsigned long ms)\n```"},"range":{"start":{"line":266,"character":4},"end":{"line":266,"character":9}}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 343

{"jsonrpc":"2.0","id":304,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":10}}}
>>>
Content-Length: 1027

{"jsonrpc":"2.0","id":304,"result":[{"range":{"start":{"line":161,"character":10},"end":{"line":161,"character":15}},"kind":1},{"range":{"start":{"line":169,"character":10},"end":{"line":169,"character":15}},"kind":1},{"range":{"start":{"line":176,"character":10},"end":{"line":176,"character":15}},"kind":1},{"range":{"start":{"line":185,"character":12},"end":{"line":185,"character":17}},"kind":1},{"range":{"start":{"line":192,"character":12},"end":{"line":192,"character":17}},"kind":1},{"range":{"start":{"line":266,"character":4},"end":{"line":266,"character":9}},"kind":1},{"range":{"start":{"line":268,"character":4},"end":{"line":268,"character":9}},"kind":1},{"range":{"start":{"line":273,"character":4},"end":{"line":273,"character":9}},"kind":1},{"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":9}},"kind":1},{"range":{"start":{"line":297,"character":4},"end":{"line":297,"character":9}},"kind":1},{"range":{"start":{"line":306,"character":8},"end":{"line":306,"character":13}},"kind":1}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":305,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":10},"end":{"line":266,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":305,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":306,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":35},"contentChanges":[{"range":{"start":{"line":266,"character":10},"end":{"line":266,"character":11}},"rangeLength":1,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":306}}Content-Length: 301

{"jsonrpc":"2.0","id":307,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":306,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":307,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":308,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":11},"end":{"line":266,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":308,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":309,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":36},"contentChanges":[{"range":{"start":{"line":266,"character":11},"end":{"line":266,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":309}}Content-Length: 301

{"jsonrpc":"2.0","id":310,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":309,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 114

{"jsonrpc":"2.0","id":"57","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8194

{"jsonrpc":"2.0","id":310,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"57","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":311,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":266,"character":12},"end":{"line":266,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":311,"result":[]}
<<<
Content-Length: 331

{"jsonrpc":"2.0","id":312,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":266,"character":10}}}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":312,"result":null}
<<<
Content-Length: 12217

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":36},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(5);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 343

{"jsonrpc":"2.0","id":313,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":273,"character":10}}}
>>>
Content-Length: 1027

{"jsonrpc":"2.0","id":313,"result":[{"range":{"start":{"line":161,"character":10},"end":{"line":161,"character":15}},"kind":1},{"range":{"start":{"line":169,"character":10},"end":{"line":169,"character":15}},"kind":1},{"range":{"start":{"line":176,"character":10},"end":{"line":176,"character":15}},"kind":1},{"range":{"start":{"line":185,"character":12},"end":{"line":185,"character":17}},"kind":1},{"range":{"start":{"line":192,"character":12},"end":{"line":192,"character":17}},"kind":1},{"range":{"start":{"line":266,"character":4},"end":{"line":266,"character":9}},"kind":1},{"range":{"start":{"line":268,"character":4},"end":{"line":268,"character":9}},"kind":1},{"range":{"start":{"line":273,"character":4},"end":{"line":273,"character":9}},"kind":1},{"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":9}},"kind":1},{"range":{"start":{"line":297,"character":4},"end":{"line":297,"character":9}},"kind":1},{"range":{"start":{"line":306,"character":8},"end":{"line":306,"character":13}},"kind":1}]}Content-Length: 119

{"jsonrpc":"2.0","id":"58","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"58","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":314,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":10},"end":{"line":273,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":314,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":315,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":37},"contentChanges":[{"range":{"start":{"line":273,"character":10},"end":{"line":273,"character":11}},"rangeLength":1,"text":"1"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":315}}Content-Length: 301

{"jsonrpc":"2.0","id":316,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":315,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":316,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":317,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":11},"end":{"line":273,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":317,"result":[]}
<<<
Content-Length: 301

{"jsonrpc":"2.0","id":318,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}Content-Length: 428

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":38},"contentChanges":[{"range":{"start":{"line":273,"character":11},"end":{"line":273,"character":11}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":318}}Content-Length: 301

{"jsonrpc":"2.0","id":319,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 8194

{"jsonrpc":"2.0","id":318,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}Content-Length: 8194

{"jsonrpc":"2.0","id":319,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 406

{"jsonrpc":"2.0","id":320,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":12},"end":{"line":273,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":320,"result":[]}
<<<
Content-Length: 12218

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":38},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}Content-Length: 406

{"jsonrpc":"2.0","id":321,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":273,"character":14},"end":{"line":273,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":321,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"59","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"59","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"60","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"60","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 179

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildOutputUri":"file:///c%3A/Users/Administrator/AppData/Local/Temp/arduino-sketch-26BAE0EC3AD8F1F83CC97EA8754FBC50"}}
>>>
Content-Length: 119

{"jsonrpc":"2.0","id":"61","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"61","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"62","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"62","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":322,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":322,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3382

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":21952,"clientInfo":{"name":"vscode","version":"1.53.2"},"rootPath":"e:\\5-教程\\1.tutorial\\ZYC0076拍照麦克轮WiFi小车\\ZYC0076\\ZYC0076-EN - 360\\4_Arduino_Code\\6.2_Arduino_UNO","rootUri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO","name":"6.2_Arduino_UNO"}]}}
>>>
Content-Length: 936

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.7.2"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 12236

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","languageId":"cpp","version":1,"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}}Content-Length: 299

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 8192

{"jsonrpc":"2.0","id":1,"result":[{"name":"MOTORservo","detail":"Servo","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":16}},"selectionRange":{"start":{"line":20,"character":6},"end":{"line":20,"character":16}}},{"name":"Forward","detail":"const int","kind":13,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":28}},"selectionRange":{"start":{"line":22,"character":10},"end":{"line":22,"character":17}}},{"name":"Backward","detail":"const int","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":18}}},{"name":"Turn_Left","detail":"const int","kind":13,"range":{"start":{"line":24,"character":0},"end":{"line":24,"character":29}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":19}}},{"name":"Turn_Right","detail":"const int","kind":13,"range":{"start":{"line":25,"character":0},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":20}}},{"name":"Top_Left","detail":"const int","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":28}},"selectionRange":{"start":{"line":26,"character":10},"end":{"line":26,"character":18}}},{"name":"Bottom_Left","detail":"const int","kind":13,"range":{"start":{"line":27,"character":0},"end":{"line":27,"character":29}},"selectionRange":{"start":{"line":27,"character":10},"end":{"line":27,"character":21}}},{"name":"Top_Right","detail":"const int","kind":13,"range":{"start":{"line":28,"character":0},"end":{"line":28,"character":28}},"selectionRange":{"start":{"line":28,"character":10},"end":{"line":28,"character":19}}},{"name":"Bottom_Right","detail":"const int","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":28}},"selectionRange":{"start":{"line":29,"character":10},"end":{"line":29,"character":22}}},{"name":"Stop","detail":"const int","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":27}},"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":14}}},{"name":"Contrarotate","detail":"const int","kind":13,"range":{"start":{"line":31,"character":0},"end":{"line":31,"character":29}},"selectionRange":{"start":{"line":31,"character":10},"end":{"line":31,"character":22}}},{"name":"Clockwise","detail":"const int","kind":13,"range":{"start":{"line":32,"character":0},"end":{"line":32,"character":28}},"selectionRange":{"start":{"line":32,"character":10},"end":{"line":32,"character":19}}},{"name":"Moedl1","detail":"const int","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":28}},"selectionRange":{"start":{"line":33,"character":10},"end":{"line":33,"character":16}}},{"name":"Moedl2","detail":"const int","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":28}},"selectionRange":{"start":{"line":34,"character":10},"end":{"line":34,"character":16}}},{"name":"Moedl3","detail":"const int","kind":13,"range":{"start":{"line":35,"character":0},"end":{"line":35,"character":28}},"selectionRange":{"start":{"line":35,"character":10},"end":{"line":35,"character":16}}},{"name":"Moedl4","detail":"const int","kind":13,"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":28}},"selectionRange":{"start":{"line":36,"character":10},"end":{"line":36,"character":16}}},{"name":"MotorLeft","detail":"const int","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":29}},"selectionRange":{"start":{"line":37,"character":10},"end":{"line":37,"character":19}}},{"name":"MotorRight","detail":"const int","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":29}},"selectionRange":{"start":{"line":38,"character":10},"end":{"line":38,"character":20}}},{"name":"Left_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":18}},"selectionRange":{"start":{"line":40,"character":4},"end":{"line":40,"character":18}}},{"name":"Center_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":20}},"selectionRange":{"start":{"line":41,"character":4},"end":{"line":41,"character":20}}},{"name":"Right_Tra_Value","detail":"int","kind":13,"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":19}},"selectionRange":{"start":{"line":42,"character":4},"end":{"line":42,"character":19}}},{"name":"Black_Line","detail":"int","kind":13,"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":20}},"selectionRange":{"start":{"line":43,"character":4},"end":{"line":43,"character":14}}},{"name":"RX_package","detail":"byte[3]","kind":13,"range":{"start":{"line":45,"character":0},"end":{"line":45,"character":24}},"selectionRange":{"start":{"line":45,"character":5},"end":{"line":45,"character":15}}},{"name":"angle","detail":"uint16_t","kind":13,"range":{"start":{"line":46,"character":0},"end":{"line":46,"character":19}},"selectionRange":{"start":{"line":46,"character":9},"end":{"line":46,"character":14}}},{"name":"order","detail":"byte","kind":13,"range":{"start":{"line":47,"character":0},"end":{"line":47,"character":17}},"selectionRange":{"start":{"line":47,"character":5},"end":{"line":47,"character":10}}},{"name":"model_var","detail":"char","kind":13,"range":{"start":{"line":48,"character":0},"end":{"line":48,"character":18}},"selectionRange":{"start":{"line":48,"character":5},"end":{"line":48,"character":14}}},{"name":"UT_distance","detail":"int","kind":13,"range":{"start":{"line":49,"character":0},"end":{"line":49,"character":19}},"selectionRange":{"start":{"line":49,"character":4},"end":{"line":49,"character":15}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":75,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":96,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":9}}},{"name":"model1_func","detail":"void (byte)","kind":12,"range":{"start":{"line":98,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":98,"character":5},"end":{"line":98,"character":16}}},{"name":"model2_func","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":203,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":16}}},{"name":"model3_func","detail":"void ()","kind":12,"range":{"start":{"line":205,"character":0},"end":{"line":230,"character":1}},"selectionRange":{"start":{"line":205,"character":5},"end":{"line":205,"character":16}}},{"name":"model4_func","detail":"void ()","kind":12,"range":{"start":{"line":232,"character":0},"end":{"line":262,"character":1}},"selectionRange":{"start":{"line":232,"character":5},"end":{"line":232,"character":16}}},{"name":"motorleft","detail":"void ()","kind":12,"range":{"start":{"line":263,"character":0},"end":{"line":269,"character":1}},"selectionRange":{"start":{"line":263,"character":5},"end":{"line":263,"character":14}}},{"name":"motorright","detail":"void ()","kind":12,"range":{"start":{"line":270,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":270,"character":5},"end":{"line":270,"character":15}}},{"name":"Motor","detail":"void (int, int)","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":287,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"SR04","detail":"float (int, int)","kind":12,"range":{"start":{"line":289,"character":0},"end":{"line":300,"character":1}},"selectionRange":{"start":{"line":289,"character":6},"end":{"line":289,"character":10}}},{"name":"RXpack_func","detail":"void ()","kind":12,"range":{"start":{"line":302,"character":0},"end":{"line":385,"character":1}},"selectionRange":{"start":{"line":302,"character":5},"end":{"line":302,"character":16}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"3/27","percentage":11}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/27","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/27","percentage":18}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/27","percentage":22}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/27","percentage":25}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/27","percentage":29}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/27","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/27","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/27","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/27","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/27","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/27","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/27","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/27","percentage":59}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/27","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/27","percentage":66}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/27","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/27","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/27","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/27","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/27","percentage":85}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/27","percentage":88}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/27","percentage":92}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/27","percentage":96}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 404

{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"range":{"start":{"line":280,"character":30},"end":{"line":280,"character":30}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":2,"result":[]}
<<<
Content-Length: 12217

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino","version":1},"text":"#include    <Servo.h>\r\n\r\n// servo control pin\r\n#define MOTOR_PIN           9\r\n// PWM control pin\r\n#define PWM1_PIN            5\r\n#define PWM2_PIN            6\r\n// 74HCT595N chip pin\r\n#define SHCP_PIN            2                               // The displacement of the clock\r\n#define EN_PIN              7                               // Can make control\r\n#define DATA_PIN            8                               // Serial data\r\n#define STCP_PIN            4                               // Memory register clock            \r\n// 超声波控制引脚\r\n#define Trig_PIN            12\r\n#define Echo_PIN            13\r\n// 循迹控制引脚\r\n#define LEFT_LINE_TRACJING      A0\r\n#define CENTER_LINE_TRACJING    A1\r\n#define right_LINE_TRACJING     A2\r\n\r\nServo MOTORservo;\r\n\r\nconst int Forward       = 92;                               // forward\r\nconst int Backward      = 163;                              // back\r\nconst int Turn_Left     = 149;                              // left translation\r\nconst int Turn_Right    = 106;                              // Right translation \r\nconst int Top_Left      = 20;                               // Upper left mobile\r\nconst int Bottom_Left   = 129;                              // Lower left mobile\r\nconst int Top_Right     = 72;                               // Upper right mobile\r\nconst int Bottom_Right  = 34;                               // The lower right move\r\nconst int Stop          = 0;                                // stop\r\nconst int Contrarotate  = 172;                              // Counterclockwise rotation\r\nconst int Clockwise     = 83;                               // Rotate clockwise\r\nconst int Moedl1        = 25;                               // model1\r\nconst int Moedl2        = 26;                               // model2\r\nconst int Moedl3        = 27;                               // model3\r\nconst int Moedl4        = 28;                               // model4\r\nconst int MotorLeft     = 230;                              // servo turn left\r\nconst int MotorRight    = 231;                              // servo turn right\r\n\r\nint Left_Tra_Value;\r\nint Center_Tra_Value;\r\nint Right_Tra_Value;\r\nint Black_Line = 400;\r\n\r\nbyte RX_package[3] = {0};\r\nuint16_t angle = 90;\r\nbyte order = Stop;\r\nchar model_var = 0;\r\nint UT_distance = 0;\r\n\r\nvoid setup()\r\n{\r\n    Serial.setTimeout(10);\r\n    Serial.begin(115200);\r\n\r\n    MOTORservo.attach(MOTOR_PIN);\r\n\r\n    pinMode(SHCP_PIN, OUTPUT);\r\n    pinMode(EN_PIN, OUTPUT);\r\n    pinMode(DATA_PIN, OUTPUT);\r\n    pinMode(STCP_PIN, OUTPUT);\r\n    pinMode(PWM1_PIN, OUTPUT);\r\n    pinMode(PWM2_PIN, OUTPUT);\r\n\r\n    pinMode(Trig_PIN, OUTPUT);\r\n    pinMode(Echo_PIN, INPUT);\r\n\r\n    pinMode(LEFT_LINE_TRACJING, INPUT);\r\n    pinMode(CENTER_LINE_TRACJING, INPUT);\r\n    pinMode(right_LINE_TRACJING, INPUT);\r\n\r\n    MOTORservo.write(angle);\r\n\r\n    Motor(Stop, 0);\r\n}\r\n\r\nvoid loop()\r\n{\r\n    RXpack_func();\r\n    switch (model_var)\r\n    {\r\n    case 0:\r\n        model1_func(order);\r\n        break;\r\n    case 1:\r\n        model2_func();      // OA model\r\n        break;\r\n    case 2:\r\n        model3_func();      // follow model\r\n        break;\r\n    case 3:\r\n        model4_func();      // Tracking model\r\n        break;\r\n    }\r\n    \r\n}\r\n\r\nvoid model1_func(byte orders)\r\n{\r\n    switch (orders)\r\n    {\r\n    case Stop:\r\n        Motor(Stop, 0);\r\n        break;\r\n    case Forward:\r\n        Motor(Forward, 250);\r\n        break;\r\n    case Backward:\r\n        Motor(Backward, 250);\r\n        break;\r\n    case Turn_Left:\r\n        Motor(Turn_Left, 250);\r\n        break;\r\n    case Turn_Right:\r\n        Motor(Turn_Right, 250);\r\n        break;\r\n    case Top_Left:\r\n        Motor(Top_Left, 250);\r\n        break;\r\n    case Top_Right:\r\n        Motor(Top_Right, 250);\r\n        break;\r\n    case Bottom_Left:\r\n        Motor(Bottom_Left, 250);\r\n        break;\r\n    case Bottom_Right:\r\n        Motor(Bottom_Right, 250);\r\n        break;\r\n    case Clockwise:\r\n        Motor(Clockwise, 250);\r\n        break;\r\n    case MotorLeft:\r\n        motorleft();\r\n        break;\r\n    case MotorRight:\r\n        motorright();\r\n        break;\r\n    default:\r\n        // Serial.println(\".\");\r\n        order = 0;\r\n        Motor(Stop, 0);\r\n        break;\r\n    }\r\n}\r\n\r\nvoid model2_func()      // OA\r\n{\r\n    MOTORservo.write(90);\r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n\r\n    if (UT_distance <= 25) \r\n    {\r\n      if (UT_distance <= 15){\r\n        Motor(Stop, 0);\r\n        MOTORservo.write(90);\r\n        Serial.print(\"UT_distance:  \");\r\n        Serial.println(UT_distance);\r\n        \r\n        for(int i = 0;i < 300;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n\r\n        Motor(Backward, 180);\r\n        for(int i = 0;i < 1000;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n        Motor(Contrarotate, 250); \r\n        for(int i = 0;i < 500;i++){\r\n          delay(1);\r\n          RXpack_func();\r\n          if(model_var != 1)\r\n            return ;\r\n        }\r\n      }\r\n      else{\r\n          Motor(Backward, 180);\r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n          Motor(Clockwise, 250); \r\n          for(int i = 0;i < 500;i++){\r\n            delay(1);\r\n            RXpack_func();\r\n            if(model_var != 1)\r\n              return ;\r\n          }\r\n      }\r\n    }\r\n    else \r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n}\r\n\r\nvoid model3_func()      // follow model\r\n{\r\n    MOTORservo.write(90);  \r\n    UT_distance = SR04(Trig_PIN, Echo_PIN);\r\n    Serial.println(UT_distance);\r\n    if (UT_distance < 15)\r\n    {\r\n        Motor(Backward, 200);\r\n    }\r\n    else if (15 <= UT_distance && UT_distance <= 20)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n    else if (20 <= UT_distance && UT_distance <= 25)\r\n    {\r\n        Motor(Forward, 180);\r\n    }\r\n    else if (25 <= UT_distance && UT_distance <= 50)\r\n    {\r\n        Motor(Forward, 220);\r\n    }\r\n    else\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\n\r\nvoid model4_func()      // tracking model\r\n{\r\n    MOTORservo.write(90);\r\n    Left_Tra_Value = analogRead(LEFT_LINE_TRACJING);\r\n    Center_Tra_Value = analogRead(CENTER_LINE_TRACJING);\r\n    Right_Tra_Value = analogRead(right_LINE_TRACJING);\r\n    if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Forward, 250);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value < Black_Line)\r\n    {\r\n        Motor(Contrarotate, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value < Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 250);\r\n    }\r\n    else if (Left_Tra_Value < Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Clockwise, 220);\r\n    }\r\n    else if (Left_Tra_Value >= Black_Line && Center_Tra_Value >= Black_Line && Right_Tra_Value >= Black_Line)\r\n    {\r\n        Motor(Stop, 0);\r\n    }\r\n}\r\nvoid motorleft()  //servo\r\n{\r\n    MOTORservo.write(120);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\nvoid motorright() //servo\r\n{\r\n    MOTORservo.write(60);\r\n    delay(10);\r\n    MOTORservo.write(90);\r\n    delay(50);\r\n}\r\n\r\nvoid Motor(int Dir, int Speed)      // motor drive\r\n{\r\n    digitalWrite(EN_PIN, LOW);\r\n    analogWrite(PWM1_PIN, Speed);\r\n    analogWrite(PWM2_PIN, Speed);\r\n\r\n    digitalWrite(STCP_PIN, LOW);\r\n    shiftOut(DATA_PIN, SHCP_PIN, MSBFIRST, Dir);\r\n    digitalWrite(STCP_PIN, HIGH);\r\n}\r\n\r\nfloat SR04(int Trig, int Echo)      // ultrasonic measured distance\r\n{\r\n    digitalWrite(Trig, LOW);\r\n    delayMicroseconds(2);\r\n    digitalWrite(Trig, HIGH);\r\n    delayMicroseconds(10);\r\n    digitalWrite(Trig, LOW);\r\n    float distance = pulseIn(Echo, HIGH) / 58.00;\r\n    delay(10);\r\n    \r\n    return distance;\r\n}\r\n\r\nvoid RXpack_func()  //Receive data\r\n{\r\n    if(Serial.available() > 0)\r\n    {\r\n        delay(1);                                           // delay 1MS\r\n        if(Serial.readBytes(RX_package, 3))\r\n        {\r\n            if (RX_package[0] == 0xA5 && RX_package[2] == 0x5A)     // The header and tail of the packet are verified\r\n            {\r\n                order = RX_package[1];\r\n                if(order == Moedl1) \r\n                {\r\n                    model_var = 0;\r\n                }\r\n                else if (order == Moedl2)\r\n                {\r\n                    model_var = 1;\r\n                }\r\n                else if (order == Moedl3)\r\n                {\r\n                    model_var = 2;\r\n                }\r\n                else if (order == Moedl4)\r\n                {\r\n                    model_var = 3;\r\n                }\r\n                //////////////////////////////\r\n                // switch (RX_package[1])\r\n                // {\r\n                // case Stop:\r\n                //     Serial.println(\"Stop\");\r\n                //     break;\r\n                // case Forward:\r\n                //     Serial.println(\"Forward\");\r\n                //     break;\r\n                // case Backward:\r\n                //     Serial.println(\"Backward\");\r\n                //     break;\r\n                // case Turn_Left:\r\n                //     Serial.println(\"Turn_Left\");\r\n                //     break;\r\n                // case Turn_Right:\r\n                //     Serial.println(\"Turn_Right\");\r\n                //     break;\r\n                // case Top_Left:\r\n                //     Serial.println(\"Top_Left\");\r\n                //     break;\r\n                // case Bottom_Left:\r\n                //     Serial.println(\"Bottom_Left\");\r\n                //     break;\r\n                // case Top_Right:\r\n                //     Serial.println(\"Top_Right\");\r\n                //     break;\r\n                // case Bottom_Right:\r\n                //     Serial.println(\"Bottom_Right\");\r\n                //     break;\r\n                // case Clockwise:\r\n                //     Serial.println(\"Clockwise\");\r\n                //     break;\r\n                // case MotorLeft:\r\n                //     Serial.println(\"MotorLeft\");\r\n                //     break;\r\n                // case MotorRight:\r\n                //     Serial.println(\"MotorRight\");\r\n                //     break;\r\n                // case Moedl1:\r\n                //     Serial.println(\"Moedl1\");\r\n                //     break;\r\n                // case Moedl2:\r\n                //     Serial.println(\"Moedl2\");\r\n                //     break;\r\n                // case Moedl3:\r\n                //     Serial.println(\"Moedl3\");\r\n                //     break;\r\n                // case Moedl4:\r\n                //     Serial.println(\"Moedl4\");\r\n                //     break;\r\n                // default:\r\n                //     break;\r\n                // }\r\n            }\r\n        }\r\n    }\r\n}\r\n"}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 327

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":9,"character":54}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 328

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///e%3A/5-%E6%95%99%E7%A8%8B/1.tutorial/ZYC0076%E6%8B%8D%E7%85%A7%E9%BA%A6%E5%85%8B%E8%BD%AEWiFi%E5%B0%8F%E8%BD%A6/ZYC0076/ZYC0076-EN%20-%20360/4_Arduino_Code/6.2_Arduino_UNO/6.2_Arduino_UNO.ino"},"position":{"line":26,"character":54}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":5,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}